Index: src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java
new file mode 100644
--- /dev/null	(date 1663835309499)
+++ b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java	(date 1663835309499)
@@ -0,0 +1,96 @@
+package AdvancedDSA.Arrays.one.PrimeNo;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+public class PrimeSequence {
+    public static int solve(ArrayList<Integer> A) {
+        int MOD=1000000007;
+        long count=1;
+        for(int i=A.size()-1;i>=0;i--){
+            if(checkPrime(A.get(i))){
+                count=(count<<1)%MOD;
+            }
+        }
+        return (int)count-1;
+    }
+
+    private static boolean checkPrime(int A){
+        int c=0;
+        if(A==1) return false;
+        for(int i=2;i*i<=A;i++){
+            if(A%i==0){
+                c++;
+            }
+        }
+        if(c==0){
+            return true;
+        }else{
+            return false;
+        }
+    }
+
+    /*public static int solve(int[] A) {
+
+        // Find maximum value in the array
+        //.*max_element(arr, arr+n);
+        int max_val = Arrays.stream(A).max().getAsInt();
+
+        // USE SIEVE TO FIND ALL PRIME NUMBERS LESS
+        // THAN OR EQUAL TO max_val
+        // Create a boolean array "prime[0..n]". A
+        // value in prime[i] will finally be false
+        // if i is Not a prime, else true.
+        Boolean[] prime = new Boolean[max_val + 1];
+        for (int i = 0; i < max_val + 1; i++)
+        {
+            prime[i] = true;
+        }
+
+        // Remaining part of SIEVE
+        prime[0] = false;
+        prime[1] = false;
+        for (int p = 2; p * p <= max_val; p++)
+        {
+
+            // If prime[p] is not changed, then
+            // it is a prime
+            if (prime[p] == true)
+            {
+
+                // Update all multiples of p
+                for (int i = p * 2; i <= max_val; i += p)
+                {
+                    prime[i] = false;
+                }
+            }
+        }
+
+        // Find all primes in arr[]
+        int count = 0;
+        for (int i = 0; i < A.length; i++)
+        {
+            if (prime[A[i]])
+            {
+                count++;
+            }
+        }
+
+
+
+        int result= count;
+        int ans =(int)Math.pow(2, result);
+        return  ans-1;
+
+*/
+
+
+    public static void main(String[] args) {
+        ArrayList<Integer> A = new ArrayList<>(List.of(343065, 609651, 476686, 235659, 834207, 747766, 273763, 256795, 442474, 686255, 636510, 568100, 7719, 927788, 211164, 536820, 750825, 438437, 10148, 416302, 193338, 851807, 136718, 181383, 841691, 676834, 895100, 681986, 306547, 664341, 608588, 744417, 159925, 712345, 353285, 371195, 619919, 577183, 515078, 837653, 262025, 602161, 28780, 225566, 769451, 847332, 779413, 872308, 731386, 945291, 814936, 132355, 137990, 664917, 456229, 626814, 911504, 39935, 864269, 876866, 242676, 419975, 154537, 436728, 709623, 437999, 329273, 662474, 991224, 254657, 744462, 228706, 195657, 52903, 437058, 897198, 31145, 767132, 799252, 987419, 327245, 877135, 515820, 727067, 436218, 206151, 709662, 66054, 496581, 654175, 46436, 756203, 906666, 420969, 694563, 588121, 284163, 252212, 301626, 55358, 867446, 1366, 852713, 836369, 270837, 320686, 847958, 548534, 842725, 319668, 454508, 91275, 797928, 793035, 151650, 584726, 545931, 548532, 109492, 635982, 387534, 845233, 456468, 378521, 144075, 812308, 42972, 554659, 946590, 720146, 738602, 168143, 589974, 243498, 230957, 954120, 38254, 799163, 887316, 474110, 720806, 46101, 206041, 922494, 252633, 609979, 408502, 445118, 114626, 32345, 5878, 617175, 196950, 126539, 412378, 246095, 906831, 692750, 531008, 321799, 276991, 253015, 207076, 12216, 524023, 483862, 301814, 586571, 272546, 653001, 880295, 678028, 336279, 792703, 570102, 823766, 332030, 380437, 603563, 970957, 181774, 822157, 276628, 710678, 401490, 176168, 810728, 257200, 404210, 545505, 850621, 28417, 519168, 946532, 460292, 993515, 705782, 683890, 9442, 205981, 258653, 994931, 58903, 888033, 626064, 264950, 756817, 868053, 522177, 187478, 434580, 443502, 25630, 929423, 903510, 104167, 404550, 89828, 257501, 489858, 674600, 785963, 59763, 205233, 767200, 849860, 791929, 481978, 860695, 698799, 432852, 607318, 611658, 451132, 932670, 739288, 397364, 299393, 914905, 73913, 756192, 415766, 170130, 248078, 664193, 773555, 86802, 132052, 252458, 46570, 244642, 371716, 992284, 773568, 448109, 660220, 656659, 16492, 547550, 390316, 217455, 633087, 481029, 395092, 237947, 489616, 179619, 221738, 796539, 611226, 304552, 61813, 880958, 928847, 578395, 954477, 710731, 335689, 152784, 281881, 938818, 17583, 189240, 317605, 510328, 145688, 590275, 345156, 584832, 400890, 786715, 793643, 233486, 923465, 205375, 401233, 81755, 334541, 245178, 609533, 287325, 202573, 857016, 297998, 668332, 653712, 314489, 31845, 912596, 221321, 665856, 837640, 376028, 79809, 962684, 267517, 388728, 315808, 931510, 545943, 95742, 484219, 757788, 413490, 128759, 332893, 906300, 644175, 815446, 425820, 708113, 110070, 529822, 74961, 495610, 205825, 316582, 451786, 584064, 855274, 456281, 140096, 686568, 4879, 204475, 810398, 171637, 555929, 653193, 233868, 590731, 408063, 378187, 943484, 267864, 740805, 109232, 888169, 49583, 881385, 410282, 253030, 740534, 610048, 896754, 531405, 514133, 991470, 558736, 437616, 29282, 504885, 45928, 164535, 606239, 560783, 408893, 500125, 450966, 159665, 480292, 404407, 206205, 340082, 708777, 351225, 581696, 19636, 617846, 423806, 876896, 220842, 733095, 237249, 370823, 60745, 725540, 476013, 975189, 133352, 606450, 383094, 192164, 341857, 101430, 14660, 296879, 777421, 872632, 224247, 676059, 556439, 782420, 450283, 76828, 486002, 197001, 856890, 688456, 259291, 22373, 709426, 788260, 435584, 279351, 789282, 365669, 186603, 898782, 393232, 319882, 149293, 472001, 737661, 774270, 167210, 760315, 524420, 811215, 342051, 839192, 145902, 73106, 457516, 420714, 923361, 69847, 432639, 279061, 662764, 357207, 387460, 791547, 168628, 383081, 923209, 886503, 680819, 827797, 856154, 980598, 889492, 270088, 567912, 990642, 653001, 89678, 403957, 703210, 267378, 201283, 762185, 710713, 994607, 684281, 827294, 710827, 383884, 106764, 245879, 225378, 328882, 343071, 726950, 165223, 272361, 940550, 794366, 780844, 558664, 324422, 188177, 765854, 288970, 645670, 680086, 226413, 820944, 566987, 513836, 496523, 314315, 177596, 942125, 364425, 653617, 526845, 391867, 484304, 125051, 72515, 136895, 562403, 917856, 582620, 194764, 585629, 369506, 333908, 653293, 886973, 59030, 914744, 531370, 923587, 25794, 795443, 935372, 150855, 58153, 721254, 876788, 796534, 524890, 661758, 676829, 433749, 96321, 567941, 972476, 276384, 707087, 706045, 147829, 5767, 443951, 933509, 161217, 498782, 12737, 909150, 387507, 692502, 350287, 49513, 418577, 343491, 340976, 386908, 402964, 967413, 923289, 754536, 364300, 857141, 107059, 975356, 152522, 180722, 669038, 146510, 272911, 706749, 755064, 806244, 341920, 244149, 159729, 860339, 715507, 975617, 282373, 503871, 564982, 444304, 155623, 527370, 401379, 861305, 909265, 244147, 96126, 450942, 793999, 578761, 856776, 242219, 41004, 690114, 338105, 646346, 833182, 491549, 227955, 637950, 77327, 567442, 349752, 836393, 13412, 699736, 685633, 883976, 434246, 387298, 481667, 303618, 727005, 730373, 911910, 298123, 463184, 814738, 462291, 491997, 393884, 763140, 340384, 774977, 857156, 228340, 95883, 674935, 646613, 595061, 728122, 375539, 654104, 59951, 66192, 498432, 421247, 352700, 666406, 87579, 759886, 364858, 594412, 343852, 32611, 786081, 405919, 273310, 611341, 179950, 569029, 121672, 264882, 321357, 112246, 592860, 331951, 915187, 966680, 726192, 265651, 665830, 285937, 593874, 229716, 493477, 316314, 375197, 175648, 269010, 958106, 600428, 894359, 475938, 668041, 693830, 383988, 724815, 627127, 668150, 514208, 387014, 691699, 55759, 2450, 731794, 749335, 476367, 480453, 12840, 956078, 506765, 645659, 714283, 218012, 201845, 684246, 27095, 743334, 585947, 874675, 890194, 163441, 399222, 646485, 26446, 105129, 239443, 400282, 999764, 29504, 549952, 446817, 11727, 505446, 429426, 220263, 190927, 585689, 373461, 935293, 220216, 853448, 191408, 683388, 636678, 607055, 331578, 282569, 146317, 140456, 581240, 95443, 280032, 924954, 509103, 654700, 825559, 128991, 464046, 520769, 719073, 346403, 557547, 684305, 74991, 218217, 772962, 40568, 245147, 131090, 835331, 845146, 385961, 527415, 173974, 329943, 381340, 524455, 544940, 324000, 835922, 839685, 226565, 492723, 698225, 204577, 359797, 998127, 863002, 871016, 289975, 253458, 9241, 99883, 314612, 533829, 731005, 64350, 143771, 318991, 815968, 749195, 401992, 208818, 582324, 684781, 670566, 144767, 195583, 727108, 143032, 212531, 442090, 3956, 734188, 22995, 927172, 669914, 449375));
+//        int A[] = { 343065, 609651, 476686, 235659, 834207, 747766, 273763, 256795, 442474, 686255, 636510, 568100, 7719, 927788, 211164, 536820, 750825, 438437, 10148, 416302, 193338, 851807, 136718, 181383, 841691, 676834, 895100, 681986, 306547, 664341, 608588, 744417, 159925, 712345, 353285, 371195, 619919, 577183, 515078, 837653, 262025, 602161, 28780, 225566, 769451, 847332, 779413, 872308, 731386, 945291, 814936, 132355, 137990, 664917, 456229, 626814, 911504, 39935, 864269, 876866, 242676, 419975, 154537, 436728, 709623, 437999, 329273, 662474, 991224, 254657, 744462, 228706, 195657, 52903, 437058, 897198, 31145, 767132, 799252, 987419, 327245, 877135, 515820, 727067, 436218, 206151, 709662, 66054, 496581, 654175, 46436, 756203, 906666, 420969, 694563, 588121, 284163, 252212, 301626, 55358, 867446, 1366, 852713, 836369, 270837, 320686, 847958, 548534, 842725, 319668, 454508, 91275, 797928, 793035, 151650, 584726, 545931, 548532, 109492, 635982, 387534, 845233, 456468, 378521, 144075, 812308, 42972, 554659, 946590, 720146, 738602, 168143, 589974, 243498, 230957, 954120, 38254, 799163, 887316, 474110, 720806, 46101, 206041, 922494, 252633, 609979, 408502, 445118, 114626, 32345, 5878, 617175, 196950, 126539, 412378, 246095, 906831, 692750, 531008, 321799, 276991, 253015, 207076, 12216, 524023, 483862, 301814, 586571, 272546, 653001, 880295, 678028, 336279, 792703, 570102, 823766, 332030, 380437, 603563, 970957, 181774, 822157, 276628, 710678, 401490, 176168, 810728, 257200, 404210, 545505, 850621, 28417, 519168, 946532, 460292, 993515, 705782, 683890, 9442, 205981, 258653, 994931, 58903, 888033, 626064, 264950, 756817, 868053, 522177, 187478, 434580, 443502, 25630, 929423, 903510, 104167, 404550, 89828, 257501, 489858, 674600, 785963, 59763, 205233, 767200, 849860, 791929, 481978, 860695, 698799, 432852, 607318, 611658, 451132, 932670, 739288, 397364, 299393, 914905, 73913, 756192, 415766, 170130, 248078, 664193, 773555, 86802, 132052, 252458, 46570, 244642, 371716, 992284, 773568, 448109, 660220, 656659, 16492, 547550, 390316, 217455, 633087, 481029, 395092, 237947, 489616, 179619, 221738, 796539, 611226, 304552, 61813, 880958, 928847, 578395, 954477, 710731, 335689, 152784, 281881, 938818, 17583, 189240, 317605, 510328, 145688, 590275, 345156, 584832, 400890, 786715, 793643, 233486, 923465, 205375, 401233, 81755, 334541, 245178, 609533, 287325, 202573, 857016, 297998, 668332, 653712, 314489, 31845, 912596, 221321, 665856, 837640, 376028, 79809, 962684, 267517, 388728, 315808, 931510, 545943, 95742, 484219, 757788, 413490, 128759, 332893, 906300, 644175, 815446, 425820, 708113, 110070, 529822, 74961, 495610, 205825, 316582, 451786, 584064, 855274, 456281, 140096, 686568, 4879, 204475, 810398, 171637, 555929, 653193, 233868, 590731, 408063, 378187, 943484, 267864, 740805, 109232, 888169, 49583, 881385, 410282, 253030, 740534, 610048, 896754, 531405, 514133, 991470, 558736, 437616, 29282, 504885, 45928, 164535, 606239, 560783, 408893, 500125, 450966, 159665, 480292, 404407, 206205, 340082, 708777, 351225, 581696, 19636, 617846, 423806, 876896, 220842, 733095, 237249, 370823, 60745, 725540, 476013, 975189, 133352, 606450, 383094, 192164, 341857, 101430, 14660, 296879, 777421, 872632, 224247, 676059, 556439, 782420, 450283, 76828, 486002, 197001, 856890, 688456, 259291, 22373, 709426, 788260, 435584, 279351, 789282, 365669, 186603, 898782, 393232, 319882, 149293, 472001, 737661, 774270, 167210, 760315, 524420, 811215, 342051, 839192, 145902, 73106, 457516, 420714, 923361, 69847, 432639, 279061, 662764, 357207, 387460, 791547, 168628, 383081, 923209, 886503, 680819, 827797, 856154, 980598, 889492, 270088, 567912, 990642, 653001, 89678, 403957, 703210, 267378, 201283, 762185, 710713, 994607, 684281, 827294, 710827, 383884, 106764, 245879, 225378, 328882, 343071, 726950, 165223, 272361, 940550, 794366, 780844, 558664, 324422, 188177, 765854, 288970, 645670, 680086, 226413, 820944, 566987, 513836, 496523, 314315, 177596, 942125, 364425, 653617, 526845, 391867, 484304, 125051, 72515, 136895, 562403, 917856, 582620, 194764, 585629, 369506, 333908, 653293, 886973, 59030, 914744, 531370, 923587, 25794, 795443, 935372, 150855, 58153, 721254, 876788, 796534, 524890, 661758, 676829, 433749, 96321, 567941, 972476, 276384, 707087, 706045, 147829, 5767, 443951, 933509, 161217, 498782, 12737, 909150, 387507, 692502, 350287, 49513, 418577, 343491, 340976, 386908, 402964, 967413, 923289, 754536, 364300, 857141, 107059, 975356, 152522, 180722, 669038, 146510, 272911, 706749, 755064, 806244, 341920, 244149, 159729, 860339, 715507, 975617, 282373, 503871, 564982, 444304, 155623, 527370, 401379, 861305, 909265, 244147, 96126, 450942, 793999, 578761, 856776, 242219, 41004, 690114, 338105, 646346, 833182, 491549, 227955, 637950, 77327, 567442, 349752, 836393, 13412, 699736, 685633, 883976, 434246, 387298, 481667, 303618, 727005, 730373, 911910, 298123, 463184, 814738, 462291, 491997, 393884, 763140, 340384, 774977, 857156, 228340, 95883, 674935, 646613, 595061, 728122, 375539, 654104, 59951, 66192, 498432, 421247, 352700, 666406, 87579, 759886, 364858, 594412, 343852, 32611, 786081, 405919, 273310, 611341, 179950, 569029, 121672, 264882, 321357, 112246, 592860, 331951, 915187, 966680, 726192, 265651, 665830, 285937, 593874, 229716, 493477, 316314, 375197, 175648, 269010, 958106, 600428, 894359, 475938, 668041, 693830, 383988, 724815, 627127, 668150, 514208, 387014, 691699, 55759, 2450, 731794, 749335, 476367, 480453, 12840, 956078, 506765, 645659, 714283, 218012, 201845, 684246, 27095, 743334, 585947, 874675, 890194, 163441, 399222, 646485, 26446, 105129, 239443, 400282, 999764, 29504, 549952, 446817, 11727, 505446, 429426, 220263, 190927, 585689, 373461, 935293, 220216, 853448, 191408, 683388, 636678, 607055, 331578, 282569, 146317, 140456, 581240, 95443, 280032, 924954, 509103, 654700, 825559, 128991, 464046, 520769, 719073, 346403, 557547, 684305, 74991, 218217, 772962, 40568, 245147, 131090, 835331, 845146, 385961, 527415, 173974, 329943, 381340, 524455, 544940, 324000, 835922, 839685, 226565, 492723, 698225, 204577, 359797, 998127, 863002, 871016, 289975, 253458, 9241, 99883, 314612, 533829, 731005, 64350, 143771, 318991, 815968, 749195, 401992, 208818, 582324, 684781, 670566, 144767, 195583, 727108, 143032, 212531, 442090, 3956, 734188, 22995, 927172, 669914, 449375};
+        System.out.println(solve(A));
+    }
+
+
+}
Index: src/main/java/Programming_constructs/Arrays_carray_forward/LeadersInArray.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Programming_constructs/Arrays_carray_forward/LeadersInArray.java b/src/main/java/Programming_constructs/Arrays_carray_forward/LeadersInArray.java
new file mode 100644
--- /dev/null	(date 1664342481276)
+++ b/src/main/java/Programming_constructs/Arrays_carray_forward/LeadersInArray.java	(date 1664342481276)
@@ -0,0 +1,38 @@
+package Programming_constructs.Arrays_carray_forward;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashSet;
+
+public class LeadersInArray {
+
+
+        public ArrayList<Integer> solve(ArrayList<Integer> A) {
+            int n= A.size();
+            Integer[] suffixLeader = new Integer[n];
+            suffixLeader[n-1] = A.get(n-1);
+            ArrayList<Integer> result = new ArrayList<>();
+            // creating the suffix array for the leader element
+            for(int i= n-2;i>=0;i--){
+                if( A.get(i) >suffixLeader[i+1]){
+                    suffixLeader[i] = A.get(i);
+                }
+                else{
+                    suffixLeader[i] = suffixLeader[i+1];
+                }
+            }
+
+            // we got all the leader in the above array
+            // return them with set \
+
+            HashSet<Integer> uniqueLeader;
+            uniqueLeader = new HashSet<Integer>(Arrays.asList(suffixLeader));
+// Integer[] sourceArray = { 0, 1, 2, 3, 4, 5 };
+            result.addAll(uniqueLeader);
+            return result;
+        }
+    }
+
+
+
+
Index: src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java
new file mode 100644
--- /dev/null	(date 1663828544291)
+++ b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java	(date 1663828544291)
@@ -0,0 +1,113 @@
+package AdvancedDSA.Arrays.one.PrimeNo;
+
+import java.util.ArrayList;
+
+public class LuckyNo {
+
+    public static int solve(int A) {
+        boolean prime[] = new boolean[A+1];
+        ArrayList<Integer> primeNo = new ArrayList<>();
+
+        // step1 : create a boolean array to initialise all entries as true means all are initially prime
+        // A vallue will finally false if it is not prime
+        for(int i=1; i<=A;i++){
+            prime[i] = true;
+        }
+        // now take each element and find the multiple of the each no. and marked them as false
+        for(int p=2; p*p<=A; p++){
+            if(prime[p] == true){
+                for(int i = p*p; i<=A; i+=p){
+                    prime[i] = false;
+                }
+            }
+        }
+
+        // take all the prime no. that has true in its vallue
+        for(int i=2 ; i<=A;i++){
+            if(prime[i] == true){
+                primeNo.add(i);
+            }
+        }
+
+        // now take the element from the primeNo and check wheather the multiple of two
+        // distinct prime no. is lessthanequal to the given no. is or not and count if it its
+        int count=0;
+//        int i=0;
+//        int j=1;
+
+        for(int p=2; p*p<=A; p++){
+            if(prime[p] == true){
+                for(int i = p*p; i<=A; i+=p){
+                    prime[i] = false;
+                }
+            }
+        }
+//        while(i<primeNo.size() && j< primeNo.size()){
+//            if(primeNo.get(i) * primeNo.get(j) <=A){
+//                count++;
+//                j++;
+//            }
+//            else{
+//                i++;
+//                j++;
+//            }
+//
+//        }
+        return count;
+
+    }
+
+
+    public static void main(String[] args) {
+        System.out.println(solve(12));
+    }
+}
+
+
+/*
+public class Solution {
+    public int solve(int A) {
+
+        //Generate Prime using prime sieve method
+        boolean[] prime = new boolean[A + 1];
+        Arrays.fill(prime, true);
+        prime[0] = false;
+        prime[1] = false;
+
+        for (int i = 2; i * i <= A; i++) {
+            if (prime[i]) {
+                for (int j = i * i; j <= A; j = j + i) {
+                    prime[j] = false;
+                }
+            }
+        }
+
+        //Load the prime numbers into an arraylist
+        ArrayList<Integer> prime_no = new ArrayList<>();
+        for (int i = 0; i < prime.length; i++) {
+            if (prime[i]) {
+                prime_no.add(i);
+            }
+        }
+
+        //Count the number having prime factors divisble == 2
+        int prime_count = 0;
+        for (int index = 1; index <= A; index++) {
+            int count = 0;
+            for (int i = 0; i < prime_no.size(); i++) {
+                if ((index % prime_no.get(i)) == 0) {
+                    count++;
+                }
+            }
+            if (count == 2) {
+                prime_count++;
+            }
+        }
+
+        return prime_count;
+
+
+
+
+    }
+}*/
Index: src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java b/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java
new file mode 100644
--- /dev/null	(date 1663775537355)
+++ b/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java	(date 1663775537355)
@@ -0,0 +1,49 @@
+package AdvancedDSA.Arrays.one.Array;
+
+public class RowWithMaximumNumberOne {
+
+    public static int solve(int[][] A) {
+        int i =0;
+        int n = A.length;
+        int m = A[0].length;
+        int j= A[0].length -1 ;
+        int count =0;
+        int ans = Integer.MIN_VALUE;
+        int minRow = Integer.MAX_VALUE;
+        // check that first coloumn and count the no. of 1 and
+        // based on the current value if found below row 1 then count the answer else go to next row
+        while(i<n && j>=0){
+            if(A[i][j] == 1){
+                count++;
+                if(count > ans){
+                    ans = count;
+                    minRow = i;
+                }
+
+                j--;
+            }
+            else{
+                i++;
+            }
+        }
+        return minRow;
+    }
+
+    public static void main(String[] args) {
+        int[][] arr = {
+                {0, 0, 0, 0, 0, 1, 1, 1, 1},
+        {0, 0, 0, 0, 0, 1, 1, 1, 1},
+        {0, 0, 0, 0, 0, 1, 1, 1, 1},
+        {0, 0, 0, 0, 0, 0, 1, 1, 1},
+        {0, 0, 0, 0, 0, 0, 1, 1, 1},
+        {0, 0, 0, 1, 1, 1, 1, 1, 1},
+        {0, 0, 0, 0, 1, 1, 1, 1, 1},
+        {0, 0, 0, 1, 1, 1, 1, 1, 1},
+        {0, 0, 0, 1, 1, 1, 1, 1, 1},
+        };
+
+        System.out.println(solve(arr));
+    }
+
+
+}
Index: src/main/java/AdvancedDSA/Arrays/one/Array/FirstMisssingInteger.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/Array/FirstMisssingInteger.java b/src/main/java/AdvancedDSA/Arrays/one/Array/FirstMisssingInteger.java
new file mode 100644
--- /dev/null	(date 1663773349467)
+++ b/src/main/java/AdvancedDSA/Arrays/one/Array/FirstMisssingInteger.java	(date 1663773349467)
@@ -0,0 +1,39 @@
+package AdvancedDSA.Arrays.one.Array;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class FirstMisssingInteger {
+
+    public  static int firstMissingPositive(ArrayList<Integer> A) {
+        int N = A.size();
+        // changes the useless no. from the array
+        for(int i=0;i<N;i++){
+            if(A.get(i) <=0 || A.get(i)> N){
+                A.set(i, N+2);
+            }
+        }
+        Integer val = 0;
+        for(int i=0;i<N;i++){
+            val =Math.abs(A.get(i));
+            if(val != N+2){
+                A.set(val -1,- Math.abs(A.get(val-1)));
+            }
+        }
+        for(int i=0;i<N;i++){
+            if(A.get(i) >0){
+                return i+1;
+            }
+        }
+        return N+1;
+    }
+    public static void main(String[] args)
+    {
+
+        ArrayList<Integer> a = new ArrayList<>(List.of(3, 4, -1, 1));
+
+
+        System.out.println(firstMissingPositive(a));
+    }
+
+}
Index: src/main/java/AdvancedDSA/Arrays/one/Array/mergeInterval.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/Array/mergeInterval.java b/src/main/java/AdvancedDSA/Arrays/one/Array/mergeInterval.java
new file mode 100644
--- /dev/null	(date 1663735371765)
+++ b/src/main/java/AdvancedDSA/Arrays/one/Array/mergeInterval.java	(date 1663735371765)
@@ -0,0 +1,145 @@
+package AdvancedDSA.Arrays.one.Array;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/*     this problem has a lot of corner cases that need to be handled correctly.
+
+        Let us first talk about the approach.
+        Given all the intervals, you need to figure out the sequence of intervals that intersect with the given new interval.
+
+        Lets see how we check if interval 1 (a,b) intersects with interval 2 (c,d):
+
+        Overlap case :
+
+        a---------------------b                      OR       a------b
+        c-------------------d                c------------------d
+        Non-overlap case:
+
+        a--------------------b   c------------------d
+        Note that if max(a,c) > min(b,d), then the intervals do not overlap. Otherwise, they overlap.
+
+        Once we figure out the intervals ( interval[i] to the interval[j] ) which overlap with the new interval, note that we can replace all the overlapping intervals with one interval, which would be
+
+        (min(interval[i].start, newInterval.start), max(interval[j].end, newInterval.end)).
+
+        Do make sure you cover the other corner cases.
+
+
+Have you covered the following corner cases :
+
+1) Size of interval array as 0.
+
+2) newInterval being an interval preceding all intervals in the array.
+
+    Given interval (3,6),(8,10), insert and merge (1,2)
+3) newInterval being an interval succeeding all intervals in the array.
+
+    Given interval (1,2), (3,6), insert and merge (8,10)
+4) newInterval not overlapping with any interval and falling in between 2 intervals in the array.
+
+    Given interval (1,2), (8,10) insert and merge (3,6)
+5) newInterval covering all given intervals.
+
+    Given interval (3, 5), (7, 9) insert and merge (1, 10)
+
+
+
+        */
+
+public class mergeInterval {
+    public static class Interval {
+     int start;
+     int end;
+     Interval() { start = 0; end = 0; }
+     Interval(int s, int e) { start = s; end = e; }
+ }
+
+ public static ArrayList<Interval> insert(ArrayList<Interval> intervals, Interval newInterval) {
+     int i = 0;
+     int start = newInterval.start;
+     int end = newInterval.end;
+     int endIndex;
+     int startIndex = endIndex = -1;
+     for (Interval in : intervals) {
+         if (start >= in.start && start <= in.end)
+             startIndex = i;
+         if (end >= in.start && end <= in.end)
+             endIndex = i;
+         i++;
+     }
+     // endpoints of new interval doesn't lie inside any other interval
+     if (startIndex == -1 && endIndex == -1) {
+         startIndex = 0;
+         for (i = 0; i < intervals.size(); i++) {
+             if (start > intervals.get(i).end) {
+                 startIndex = i + 1;
+             }
+         }
+         endIndex = intervals.size() - 1;
+         for (i = intervals.size() - 1; i >= 0 ; i--) {
+             if (end < intervals.get(i).start) {
+                 endIndex = i - 1;
+             }
+         }
+         // Intervals between startIndex and endIndex lies completely inside new interval
+         for (i = startIndex; i <= endIndex; i++) {
+             intervals.remove(startIndex);
+         }
+         intervals.add(startIndex, newInterval);
+         return intervals;
+     }
+     if (startIndex == -1) {
+         for (i = intervals.size() - 1; i >= 0 ; i--) {
+             if (start <= intervals.get(i).start)
+                 startIndex = i;
+         }
+     }
+     if (endIndex == -1) {
+         for (i = 0; i < intervals.size(); i++) {
+             if (end >= intervals.get(i).end)
+                 endIndex = i;
+         }
+     }
+     start = Math.min(intervals.get(startIndex).start, start);
+     end = Math.max(intervals.get(endIndex).end, end);
+     intervals.get(startIndex).start = start;
+     intervals.get(startIndex).end = end;
+     for (i = startIndex + 1; i <= endIndex; i++) {
+         intervals.remove(startIndex + 1);
+     }
+     return intervals;
+
+    /*
+     ArrayList<Interval> result = new ArrayList<Interval>();
+
+     for(Interval interval: intervals){
+         if(interval.end < newInterval.start){
+             result.add(interval);
+         }else if(interval.start > newInterval.end){
+             result.add(newInterval);
+             newInterval = interval;
+         }else if(interval.end >= newInterval.start || interval.start <= newInterval.end){
+             newInterval = new Interval(Math.min(interval.start, newInterval.start), Math.max(newInterval.end, interval.end));
+         }
+     }
+
+     result.add(newInterval);
+
+     return result;
+     */
+ }
+
+
+
+ public static void main(String[] args) {
+       Interval interval = new Interval(1, 3);
+       Interval interva2 = new Interval(6,9);
+       Interval new_interval = new Interval(2, 5);
+       ArrayList<Interval> intervals = new ArrayList<>(List.of(interval,interva2,new_interval));
+
+       ArrayList<Interval> result = insert(intervals,new_interval);
+      }
+}
+
+
Index: src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java
new file mode 100644
--- /dev/null	(date 1663923714312)
+++ b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java	(date 1663923714312)
@@ -0,0 +1,21 @@
+package AdvancedDSA.Arrays.one.ModularAritmetic;
+
+public class PrimeModuloInverse {
+
+    public static int solve(int A, int B) {
+        int result =1;
+        for( int i=1;i<B;i++){
+            if((A*i)%B ==1){
+                result=i;
+                 break;
+            }
+        }
+       return result;
+    }
+
+    public static void main(String[] args) {
+       int A=4707241;
+       int B=999996259;
+        System.out.println(solve(A,B));
+    }
+}
Index: src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java
new file mode 100644
--- /dev/null	(date 1663917473747)
+++ b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java	(date 1663917473747)
@@ -0,0 +1,69 @@
+package AdvancedDSA.Arrays.one.ModularAritmetic;
+
+public class PowerForNegPostive {
+
+    public static int pow(int A, int B, int C) {
+        if((A == 0 && B == 0) || A == 0) {  // 0 ^ 0 is indeterminate form hence could be returned as 0
+            return 0;    // Also if 0 ^ n where n = any natural number, we get 0 only. Eg: 0 ^ 2 = 0
+        }
+        if(B == 0) {    // If power is 0, we get 1 for all base values.
+            return 1;
+        }
+        long x = pow(A, B/2, C);    // storing the recursion calls in a variable x which gives us the SC: O(log N_base2)
+
+        // Using modulo to keep the multiplication of two max integers in the worst case also comes in the range [0, C-1]
+        if(B % 2 == 0) {    //If B is even, powers can be broken in equal parts
+            return (int)(((x % C * x % C) + C) % C);
+        } else {
+            return (int)(((x % C * x % C * A % C) + C) % C);
+        }
+    }
+//    public int pow(int x, int n, int d) {
+//        long a = x;
+//        long res = 1L;
+//        while (n > 0) {
+//            if (n % 2 == 1) {
+//                res *= a;
+//                res %= d;
+//            }
+//            a *= a;
+//            a %= d;
+//            n = n >> 1;
+//        }
+//        res = (res + d) % d;
+//        return (int) res;
+//    }}
+
+    // utility power function
+//    static int  power1(int A, int B){
+//        if(A==0 || B==0){
+//            return 1;
+//        }
+//
+//        return A*power1(A,B-1);
+//
+//    }
+//    public static int pow1(int A, int B, int C) {
+//        int value =0;
+//        if(A==0 || B==0){
+//            return 1;
+//        }
+//
+//        else
+//        {
+//            int half = power1(A, B / 2);
+//            if (B % 2 == 0) {
+//                value = (half % C * half % C) % C;
+//            }
+//            else{
+//                value = (((half % C * half % C)*A)+C)%C;
+//            }
+//        }
+//        return value;
+//    }
+
+    public static void main(String[] args) {
+        int A =2, B = 4, C = 3;
+        System.out.println(pow(A,B,C));
+    }
+}
Index: src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java b/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java
new file mode 100644
--- /dev/null	(date 1663908725703)
+++ b/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java	(date 1663908725703)
@@ -0,0 +1,37 @@
+package AdvancedDSA.Arrays.one.BitManipulation;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class singleNumberII {
+    public static int singleNumber(final List<Integer> A) {
+        int extraValue = 0;
+
+        for(int i=0; i<32;i++){
+            int noOfSetBitInIthPostition =0;
+            int noOfUnSetBitInIthPostition =0;
+            for(int n=0; n<A.size(); n++){
+                if(((A.get(n) & (1<<i))  !=0)){
+                    noOfSetBitInIthPostition++;
+                }
+                else{
+                    noOfUnSetBitInIthPostition++;
+                }
+            }
+            if(noOfSetBitInIthPostition % 3 !=0 ){
+                extraValue += 1* Math.pow(2,i);
+            }
+            else if(noOfUnSetBitInIthPostition % 3 !=0 ){
+                extraValue += 0* Math.pow(2,i);
+            }
+        }
+        return extraValue;
+
+    }
+
+    public static void main(String[] args) {
+        List<Integer> a= new ArrayList<>(List.of(1, 2, 4, 3, 3, 2, 2, 3, 1, 1));
+        System.out.println(singleNumber(a));
+
+    }
+}
Index: src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSum.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSum.java b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSum.java
new file mode 100644
--- /dev/null	(date 1663905296746)
+++ b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSum.java	(date 1663905296746)
@@ -0,0 +1,83 @@
+package AdvancedDSA.Arrays.one.PrimeNo;
+
+import java.util.ArrayList;
+
+public class PrimeSum {
+
+
+        static int MAX = 10000;
+
+        // Array to store all prime less
+        // than and equal to 10^6
+        static ArrayList<Integer> primes = new ArrayList<Integer>();
+
+        // Utility function for Sieve of Sundaram
+        static void sieveSundaram()
+        {
+            // In general Sieve of Sundaram, produces
+            // primes smaller than (2*x + 2) for
+            // a number given number x. Since
+            // we want primes smaller than MAX,
+            // we reduce MAX to half This array is
+            // used to separate numbers of the form
+            // i + j + 2*i*j from others where 1 <= i <= j
+            boolean[] marked = new boolean[MAX / 2 + 100];
+
+            // Main logic of Sundaram. Mark all numbers which
+            // do not generate prime number by doing 2*i+1
+            for (int i = 1; i <= (Math.sqrt(MAX) - 1) / 2; i++)
+                for (int j = (i * (i + 1)) << 1; j <= MAX / 2; j = j + 2 * i + 1)
+                    marked[j] = true;
+
+            // Since 2 is a prime number
+            primes.add(2);
+
+            // Print other primes. Remaining primes are of the
+            // form 2*i + 1 such that marked[i] is false.
+            for (int i = 1; i <= MAX / 2; i++)
+                if (marked[i] == false)
+                    primes.add(2 * i + 1);
+        }
+
+        // Function to perform Goldbach's conjecture
+        static void findPrimes(int n)
+        {
+            // Return if number is not even or less than 3
+            if (n <= 2 || n % 2 != 0)
+            {
+                System.out.println("Invalid Input ");
+                return;
+            }
+
+            // Check only upto half of number
+            for (int i = 0 ; primes.get(i) <= n / 2; i++)
+            {
+                // find difference by subtracting
+                // current prime from n
+                int diff = n - primes.get(i);
+
+                // Search if the difference is
+                // also a prime number
+                if (primes.contains(diff))
+                {
+                    // Express as a sum of primes
+                    System.out.println(primes.get(i) +
+                            " + " + diff + " = " + n);
+                    return;
+                }
+            }
+        }
+
+        // Driver code
+        public static void main (String[] args)
+        {
+            // Finding all prime numbers before limit
+            sieveSundaram();
+
+            // Express number as a sum of two primes
+            findPrimes(4);
+            findPrimes(38);
+            findPrimes(100);
+        }
+    }
+
Index: src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java
new file mode 100644
--- /dev/null	(date 1663843569050)
+++ b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java	(date 1663843569050)
@@ -0,0 +1,69 @@
+package AdvancedDSA.Arrays.one.ModularAritmetic;
+
+public class PairSumDivisibleByM {
+    public static int solve(int[] A, int B) {
+        long cnt=0;
+        long mod= (long)(1e9+7);
+        int N=A.length;
+        int rem=0;
+        int [] arr= new int [B];
+        for(int i=0;i<B;i++){
+            arr[i]=0;
+        }
+        for(int j=0;j<N;j++){
+            rem=A[j]%B;
+            arr[rem]++;
+        }
+        cnt+=pairfind(arr[0]);
+        int k=1;
+        int l=B-1;
+        if(B%2==0){
+            cnt+=pairfind(arr[B/2]);
+        }
+        while(k<l){
+            cnt+=(long) arr[k]*arr[l];
+            k++;
+            l--;
+        }
+        return (int) (cnt%mod);
+    }
+    public static long pairfind(long a){
+        long sum= a*(a-1)/2;
+        return sum;
+    }
+
+    /*public static int solve(int[] A, int B) {
+        int i=0;
+        int j=1;
+        int count =0;
+        while(j<A.length){
+            if((A[i] + A[j]) %B == 0){
+                count++;
+
+                if(j==A.length-1){
+                    i++;
+                    j=i+1;
+                }
+                j++;
+            }
+            else if((A[i] + A[j]) %B != 0){
+                if(j<A.length-1)
+                {
+                    j++;
+                }
+//                else if(j==A.length-1){
+//                    i++;
+//                    j=i+1;
+//                }
+            }
+
+        }
+        return count;
+    }*/
+
+    public static void main(String[] args) {
+        int A[] = {1, 2, 3, 4, 5};
+        int B =2;
+        System.out.println(solve(A,B));
+    }
+}
Index: before_the_bit_manipulation_start_advance.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/before_the_bit_manipulation_start_advance.patch b/before_the_bit_manipulation_start_advance.patch
new file mode 100644
--- /dev/null	(date 1664345479001)
+++ b/before_the_bit_manipulation_start_advance.patch	(date 1664345479001)
@@ -0,0 +1,1837 @@
+Index: src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java
+new file mode 100644
+--- /dev/null	(date 1663835309499)
++++ b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java	(date 1663835309499)
+@@ -0,0 +1,96 @@
++package AdvancedDSA.Arrays.one.PrimeNo;
++
++import java.util.ArrayList;
++import java.util.Arrays;
++import java.util.List;
++
++public class PrimeSequence {
++    public static int solve(ArrayList<Integer> A) {
++        int MOD=1000000007;
++        long count=1;
++        for(int i=A.size()-1;i>=0;i--){
++            if(checkPrime(A.get(i))){
++                count=(count<<1)%MOD;
++            }
++        }
++        return (int)count-1;
++    }
++
++    private static boolean checkPrime(int A){
++        int c=0;
++        if(A==1) return false;
++        for(int i=2;i*i<=A;i++){
++            if(A%i==0){
++                c++;
++            }
++        }
++        if(c==0){
++            return true;
++        }else{
++            return false;
++        }
++    }
++
++    /*public static int solve(int[] A) {
++
++        // Find maximum value in the array
++        //.*max_element(arr, arr+n);
++        int max_val = Arrays.stream(A).max().getAsInt();
++
++        // USE SIEVE TO FIND ALL PRIME NUMBERS LESS
++        // THAN OR EQUAL TO max_val
++        // Create a boolean array "prime[0..n]". A
++        // value in prime[i] will finally be false
++        // if i is Not a prime, else true.
++        Boolean[] prime = new Boolean[max_val + 1];
++        for (int i = 0; i < max_val + 1; i++)
++        {
++            prime[i] = true;
++        }
++
++        // Remaining part of SIEVE
++        prime[0] = false;
++        prime[1] = false;
++        for (int p = 2; p * p <= max_val; p++)
++        {
++
++            // If prime[p] is not changed, then
++            // it is a prime
++            if (prime[p] == true)
++            {
++
++                // Update all multiples of p
++                for (int i = p * 2; i <= max_val; i += p)
++                {
++                    prime[i] = false;
++                }
++            }
++        }
++
++        // Find all primes in arr[]
++        int count = 0;
++        for (int i = 0; i < A.length; i++)
++        {
++            if (prime[A[i]])
++            {
++                count++;
++            }
++        }
++
++
++
++        int result= count;
++        int ans =(int)Math.pow(2, result);
++        return  ans-1;
++
++*/
++
++
++    public static void main(String[] args) {
++        ArrayList<Integer> A = new ArrayList<>(List.of(343065, 609651, 476686, 235659, 834207, 747766, 273763, 256795, 442474, 686255, 636510, 568100, 7719, 927788, 211164, 536820, 750825, 438437, 10148, 416302, 193338, 851807, 136718, 181383, 841691, 676834, 895100, 681986, 306547, 664341, 608588, 744417, 159925, 712345, 353285, 371195, 619919, 577183, 515078, 837653, 262025, 602161, 28780, 225566, 769451, 847332, 779413, 872308, 731386, 945291, 814936, 132355, 137990, 664917, 456229, 626814, 911504, 39935, 864269, 876866, 242676, 419975, 154537, 436728, 709623, 437999, 329273, 662474, 991224, 254657, 744462, 228706, 195657, 52903, 437058, 897198, 31145, 767132, 799252, 987419, 327245, 877135, 515820, 727067, 436218, 206151, 709662, 66054, 496581, 654175, 46436, 756203, 906666, 420969, 694563, 588121, 284163, 252212, 301626, 55358, 867446, 1366, 852713, 836369, 270837, 320686, 847958, 548534, 842725, 319668, 454508, 91275, 797928, 793035, 151650, 584726, 545931, 548532, 109492, 635982, 387534, 845233, 456468, 378521, 144075, 812308, 42972, 554659, 946590, 720146, 738602, 168143, 589974, 243498, 230957, 954120, 38254, 799163, 887316, 474110, 720806, 46101, 206041, 922494, 252633, 609979, 408502, 445118, 114626, 32345, 5878, 617175, 196950, 126539, 412378, 246095, 906831, 692750, 531008, 321799, 276991, 253015, 207076, 12216, 524023, 483862, 301814, 586571, 272546, 653001, 880295, 678028, 336279, 792703, 570102, 823766, 332030, 380437, 603563, 970957, 181774, 822157, 276628, 710678, 401490, 176168, 810728, 257200, 404210, 545505, 850621, 28417, 519168, 946532, 460292, 993515, 705782, 683890, 9442, 205981, 258653, 994931, 58903, 888033, 626064, 264950, 756817, 868053, 522177, 187478, 434580, 443502, 25630, 929423, 903510, 104167, 404550, 89828, 257501, 489858, 674600, 785963, 59763, 205233, 767200, 849860, 791929, 481978, 860695, 698799, 432852, 607318, 611658, 451132, 932670, 739288, 397364, 299393, 914905, 73913, 756192, 415766, 170130, 248078, 664193, 773555, 86802, 132052, 252458, 46570, 244642, 371716, 992284, 773568, 448109, 660220, 656659, 16492, 547550, 390316, 217455, 633087, 481029, 395092, 237947, 489616, 179619, 221738, 796539, 611226, 304552, 61813, 880958, 928847, 578395, 954477, 710731, 335689, 152784, 281881, 938818, 17583, 189240, 317605, 510328, 145688, 590275, 345156, 584832, 400890, 786715, 793643, 233486, 923465, 205375, 401233, 81755, 334541, 245178, 609533, 287325, 202573, 857016, 297998, 668332, 653712, 314489, 31845, 912596, 221321, 665856, 837640, 376028, 79809, 962684, 267517, 388728, 315808, 931510, 545943, 95742, 484219, 757788, 413490, 128759, 332893, 906300, 644175, 815446, 425820, 708113, 110070, 529822, 74961, 495610, 205825, 316582, 451786, 584064, 855274, 456281, 140096, 686568, 4879, 204475, 810398, 171637, 555929, 653193, 233868, 590731, 408063, 378187, 943484, 267864, 740805, 109232, 888169, 49583, 881385, 410282, 253030, 740534, 610048, 896754, 531405, 514133, 991470, 558736, 437616, 29282, 504885, 45928, 164535, 606239, 560783, 408893, 500125, 450966, 159665, 480292, 404407, 206205, 340082, 708777, 351225, 581696, 19636, 617846, 423806, 876896, 220842, 733095, 237249, 370823, 60745, 725540, 476013, 975189, 133352, 606450, 383094, 192164, 341857, 101430, 14660, 296879, 777421, 872632, 224247, 676059, 556439, 782420, 450283, 76828, 486002, 197001, 856890, 688456, 259291, 22373, 709426, 788260, 435584, 279351, 789282, 365669, 186603, 898782, 393232, 319882, 149293, 472001, 737661, 774270, 167210, 760315, 524420, 811215, 342051, 839192, 145902, 73106, 457516, 420714, 923361, 69847, 432639, 279061, 662764, 357207, 387460, 791547, 168628, 383081, 923209, 886503, 680819, 827797, 856154, 980598, 889492, 270088, 567912, 990642, 653001, 89678, 403957, 703210, 267378, 201283, 762185, 710713, 994607, 684281, 827294, 710827, 383884, 106764, 245879, 225378, 328882, 343071, 726950, 165223, 272361, 940550, 794366, 780844, 558664, 324422, 188177, 765854, 288970, 645670, 680086, 226413, 820944, 566987, 513836, 496523, 314315, 177596, 942125, 364425, 653617, 526845, 391867, 484304, 125051, 72515, 136895, 562403, 917856, 582620, 194764, 585629, 369506, 333908, 653293, 886973, 59030, 914744, 531370, 923587, 25794, 795443, 935372, 150855, 58153, 721254, 876788, 796534, 524890, 661758, 676829, 433749, 96321, 567941, 972476, 276384, 707087, 706045, 147829, 5767, 443951, 933509, 161217, 498782, 12737, 909150, 387507, 692502, 350287, 49513, 418577, 343491, 340976, 386908, 402964, 967413, 923289, 754536, 364300, 857141, 107059, 975356, 152522, 180722, 669038, 146510, 272911, 706749, 755064, 806244, 341920, 244149, 159729, 860339, 715507, 975617, 282373, 503871, 564982, 444304, 155623, 527370, 401379, 861305, 909265, 244147, 96126, 450942, 793999, 578761, 856776, 242219, 41004, 690114, 338105, 646346, 833182, 491549, 227955, 637950, 77327, 567442, 349752, 836393, 13412, 699736, 685633, 883976, 434246, 387298, 481667, 303618, 727005, 730373, 911910, 298123, 463184, 814738, 462291, 491997, 393884, 763140, 340384, 774977, 857156, 228340, 95883, 674935, 646613, 595061, 728122, 375539, 654104, 59951, 66192, 498432, 421247, 352700, 666406, 87579, 759886, 364858, 594412, 343852, 32611, 786081, 405919, 273310, 611341, 179950, 569029, 121672, 264882, 321357, 112246, 592860, 331951, 915187, 966680, 726192, 265651, 665830, 285937, 593874, 229716, 493477, 316314, 375197, 175648, 269010, 958106, 600428, 894359, 475938, 668041, 693830, 383988, 724815, 627127, 668150, 514208, 387014, 691699, 55759, 2450, 731794, 749335, 476367, 480453, 12840, 956078, 506765, 645659, 714283, 218012, 201845, 684246, 27095, 743334, 585947, 874675, 890194, 163441, 399222, 646485, 26446, 105129, 239443, 400282, 999764, 29504, 549952, 446817, 11727, 505446, 429426, 220263, 190927, 585689, 373461, 935293, 220216, 853448, 191408, 683388, 636678, 607055, 331578, 282569, 146317, 140456, 581240, 95443, 280032, 924954, 509103, 654700, 825559, 128991, 464046, 520769, 719073, 346403, 557547, 684305, 74991, 218217, 772962, 40568, 245147, 131090, 835331, 845146, 385961, 527415, 173974, 329943, 381340, 524455, 544940, 324000, 835922, 839685, 226565, 492723, 698225, 204577, 359797, 998127, 863002, 871016, 289975, 253458, 9241, 99883, 314612, 533829, 731005, 64350, 143771, 318991, 815968, 749195, 401992, 208818, 582324, 684781, 670566, 144767, 195583, 727108, 143032, 212531, 442090, 3956, 734188, 22995, 927172, 669914, 449375));
++//        int A[] = { 343065, 609651, 476686, 235659, 834207, 747766, 273763, 256795, 442474, 686255, 636510, 568100, 7719, 927788, 211164, 536820, 750825, 438437, 10148, 416302, 193338, 851807, 136718, 181383, 841691, 676834, 895100, 681986, 306547, 664341, 608588, 744417, 159925, 712345, 353285, 371195, 619919, 577183, 515078, 837653, 262025, 602161, 28780, 225566, 769451, 847332, 779413, 872308, 731386, 945291, 814936, 132355, 137990, 664917, 456229, 626814, 911504, 39935, 864269, 876866, 242676, 419975, 154537, 436728, 709623, 437999, 329273, 662474, 991224, 254657, 744462, 228706, 195657, 52903, 437058, 897198, 31145, 767132, 799252, 987419, 327245, 877135, 515820, 727067, 436218, 206151, 709662, 66054, 496581, 654175, 46436, 756203, 906666, 420969, 694563, 588121, 284163, 252212, 301626, 55358, 867446, 1366, 852713, 836369, 270837, 320686, 847958, 548534, 842725, 319668, 454508, 91275, 797928, 793035, 151650, 584726, 545931, 548532, 109492, 635982, 387534, 845233, 456468, 378521, 144075, 812308, 42972, 554659, 946590, 720146, 738602, 168143, 589974, 243498, 230957, 954120, 38254, 799163, 887316, 474110, 720806, 46101, 206041, 922494, 252633, 609979, 408502, 445118, 114626, 32345, 5878, 617175, 196950, 126539, 412378, 246095, 906831, 692750, 531008, 321799, 276991, 253015, 207076, 12216, 524023, 483862, 301814, 586571, 272546, 653001, 880295, 678028, 336279, 792703, 570102, 823766, 332030, 380437, 603563, 970957, 181774, 822157, 276628, 710678, 401490, 176168, 810728, 257200, 404210, 545505, 850621, 28417, 519168, 946532, 460292, 993515, 705782, 683890, 9442, 205981, 258653, 994931, 58903, 888033, 626064, 264950, 756817, 868053, 522177, 187478, 434580, 443502, 25630, 929423, 903510, 104167, 404550, 89828, 257501, 489858, 674600, 785963, 59763, 205233, 767200, 849860, 791929, 481978, 860695, 698799, 432852, 607318, 611658, 451132, 932670, 739288, 397364, 299393, 914905, 73913, 756192, 415766, 170130, 248078, 664193, 773555, 86802, 132052, 252458, 46570, 244642, 371716, 992284, 773568, 448109, 660220, 656659, 16492, 547550, 390316, 217455, 633087, 481029, 395092, 237947, 489616, 179619, 221738, 796539, 611226, 304552, 61813, 880958, 928847, 578395, 954477, 710731, 335689, 152784, 281881, 938818, 17583, 189240, 317605, 510328, 145688, 590275, 345156, 584832, 400890, 786715, 793643, 233486, 923465, 205375, 401233, 81755, 334541, 245178, 609533, 287325, 202573, 857016, 297998, 668332, 653712, 314489, 31845, 912596, 221321, 665856, 837640, 376028, 79809, 962684, 267517, 388728, 315808, 931510, 545943, 95742, 484219, 757788, 413490, 128759, 332893, 906300, 644175, 815446, 425820, 708113, 110070, 529822, 74961, 495610, 205825, 316582, 451786, 584064, 855274, 456281, 140096, 686568, 4879, 204475, 810398, 171637, 555929, 653193, 233868, 590731, 408063, 378187, 943484, 267864, 740805, 109232, 888169, 49583, 881385, 410282, 253030, 740534, 610048, 896754, 531405, 514133, 991470, 558736, 437616, 29282, 504885, 45928, 164535, 606239, 560783, 408893, 500125, 450966, 159665, 480292, 404407, 206205, 340082, 708777, 351225, 581696, 19636, 617846, 423806, 876896, 220842, 733095, 237249, 370823, 60745, 725540, 476013, 975189, 133352, 606450, 383094, 192164, 341857, 101430, 14660, 296879, 777421, 872632, 224247, 676059, 556439, 782420, 450283, 76828, 486002, 197001, 856890, 688456, 259291, 22373, 709426, 788260, 435584, 279351, 789282, 365669, 186603, 898782, 393232, 319882, 149293, 472001, 737661, 774270, 167210, 760315, 524420, 811215, 342051, 839192, 145902, 73106, 457516, 420714, 923361, 69847, 432639, 279061, 662764, 357207, 387460, 791547, 168628, 383081, 923209, 886503, 680819, 827797, 856154, 980598, 889492, 270088, 567912, 990642, 653001, 89678, 403957, 703210, 267378, 201283, 762185, 710713, 994607, 684281, 827294, 710827, 383884, 106764, 245879, 225378, 328882, 343071, 726950, 165223, 272361, 940550, 794366, 780844, 558664, 324422, 188177, 765854, 288970, 645670, 680086, 226413, 820944, 566987, 513836, 496523, 314315, 177596, 942125, 364425, 653617, 526845, 391867, 484304, 125051, 72515, 136895, 562403, 917856, 582620, 194764, 585629, 369506, 333908, 653293, 886973, 59030, 914744, 531370, 923587, 25794, 795443, 935372, 150855, 58153, 721254, 876788, 796534, 524890, 661758, 676829, 433749, 96321, 567941, 972476, 276384, 707087, 706045, 147829, 5767, 443951, 933509, 161217, 498782, 12737, 909150, 387507, 692502, 350287, 49513, 418577, 343491, 340976, 386908, 402964, 967413, 923289, 754536, 364300, 857141, 107059, 975356, 152522, 180722, 669038, 146510, 272911, 706749, 755064, 806244, 341920, 244149, 159729, 860339, 715507, 975617, 282373, 503871, 564982, 444304, 155623, 527370, 401379, 861305, 909265, 244147, 96126, 450942, 793999, 578761, 856776, 242219, 41004, 690114, 338105, 646346, 833182, 491549, 227955, 637950, 77327, 567442, 349752, 836393, 13412, 699736, 685633, 883976, 434246, 387298, 481667, 303618, 727005, 730373, 911910, 298123, 463184, 814738, 462291, 491997, 393884, 763140, 340384, 774977, 857156, 228340, 95883, 674935, 646613, 595061, 728122, 375539, 654104, 59951, 66192, 498432, 421247, 352700, 666406, 87579, 759886, 364858, 594412, 343852, 32611, 786081, 405919, 273310, 611341, 179950, 569029, 121672, 264882, 321357, 112246, 592860, 331951, 915187, 966680, 726192, 265651, 665830, 285937, 593874, 229716, 493477, 316314, 375197, 175648, 269010, 958106, 600428, 894359, 475938, 668041, 693830, 383988, 724815, 627127, 668150, 514208, 387014, 691699, 55759, 2450, 731794, 749335, 476367, 480453, 12840, 956078, 506765, 645659, 714283, 218012, 201845, 684246, 27095, 743334, 585947, 874675, 890194, 163441, 399222, 646485, 26446, 105129, 239443, 400282, 999764, 29504, 549952, 446817, 11727, 505446, 429426, 220263, 190927, 585689, 373461, 935293, 220216, 853448, 191408, 683388, 636678, 607055, 331578, 282569, 146317, 140456, 581240, 95443, 280032, 924954, 509103, 654700, 825559, 128991, 464046, 520769, 719073, 346403, 557547, 684305, 74991, 218217, 772962, 40568, 245147, 131090, 835331, 845146, 385961, 527415, 173974, 329943, 381340, 524455, 544940, 324000, 835922, 839685, 226565, 492723, 698225, 204577, 359797, 998127, 863002, 871016, 289975, 253458, 9241, 99883, 314612, 533829, 731005, 64350, 143771, 318991, 815968, 749195, 401992, 208818, 582324, 684781, 670566, 144767, 195583, 727108, 143032, 212531, 442090, 3956, 734188, 22995, 927172, 669914, 449375};
++        System.out.println(solve(A));
++    }
++
++
++}
+Index: src/main/java/Programming_constructs/Arrays_carray_forward/LeadersInArray.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/Programming_constructs/Arrays_carray_forward/LeadersInArray.java b/src/main/java/Programming_constructs/Arrays_carray_forward/LeadersInArray.java
+new file mode 100644
+--- /dev/null	(date 1664342481276)
++++ b/src/main/java/Programming_constructs/Arrays_carray_forward/LeadersInArray.java	(date 1664342481276)
+@@ -0,0 +1,38 @@
++package Programming_constructs.Arrays_carray_forward;
++
++import java.util.ArrayList;
++import java.util.Arrays;
++import java.util.HashSet;
++
++public class LeadersInArray {
++
++
++        public ArrayList<Integer> solve(ArrayList<Integer> A) {
++            int n= A.size();
++            Integer[] suffixLeader = new Integer[n];
++            suffixLeader[n-1] = A.get(n-1);
++            ArrayList<Integer> result = new ArrayList<>();
++            // creating the suffix array for the leader element
++            for(int i= n-2;i>=0;i--){
++                if( A.get(i) >suffixLeader[i+1]){
++                    suffixLeader[i] = A.get(i);
++                }
++                else{
++                    suffixLeader[i] = suffixLeader[i+1];
++                }
++            }
++
++            // we got all the leader in the above array
++            // return them with set \
++
++            HashSet<Integer> uniqueLeader;
++            uniqueLeader = new HashSet<Integer>(Arrays.asList(suffixLeader));
++// Integer[] sourceArray = { 0, 1, 2, 3, 4, 5 };
++            result.addAll(uniqueLeader);
++            return result;
++        }
++    }
++
++
++
++
+Index: src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java
+new file mode 100644
+--- /dev/null	(date 1663828544291)
++++ b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java	(date 1663828544291)
+@@ -0,0 +1,113 @@
++package AdvancedDSA.Arrays.one.PrimeNo;
++
++import java.util.ArrayList;
++
++public class LuckyNo {
++
++    public static int solve(int A) {
++        boolean prime[] = new boolean[A+1];
++        ArrayList<Integer> primeNo = new ArrayList<>();
++
++        // step1 : create a boolean array to initialise all entries as true means all are initially prime
++        // A vallue will finally false if it is not prime
++        for(int i=1; i<=A;i++){
++            prime[i] = true;
++        }
++        // now take each element and find the multiple of the each no. and marked them as false
++        for(int p=2; p*p<=A; p++){
++            if(prime[p] == true){
++                for(int i = p*p; i<=A; i+=p){
++                    prime[i] = false;
++                }
++            }
++        }
++
++        // take all the prime no. that has true in its vallue
++        for(int i=2 ; i<=A;i++){
++            if(prime[i] == true){
++                primeNo.add(i);
++            }
++        }
++
++        // now take the element from the primeNo and check wheather the multiple of two
++        // distinct prime no. is lessthanequal to the given no. is or not and count if it its
++        int count=0;
++//        int i=0;
++//        int j=1;
++
++        for(int p=2; p*p<=A; p++){
++            if(prime[p] == true){
++                for(int i = p*p; i<=A; i+=p){
++                    prime[i] = false;
++                }
++            }
++        }
++//        while(i<primeNo.size() && j< primeNo.size()){
++//            if(primeNo.get(i) * primeNo.get(j) <=A){
++//                count++;
++//                j++;
++//            }
++//            else{
++//                i++;
++//                j++;
++//            }
++//
++//        }
++        return count;
++
++    }
++
++
++    public static void main(String[] args) {
++        System.out.println(solve(12));
++    }
++}
++
++
++/*
++public class Solution {
++    public int solve(int A) {
++
++        //Generate Prime using prime sieve method
++        boolean[] prime = new boolean[A + 1];
++        Arrays.fill(prime, true);
++        prime[0] = false;
++        prime[1] = false;
++
++        for (int i = 2; i * i <= A; i++) {
++            if (prime[i]) {
++                for (int j = i * i; j <= A; j = j + i) {
++                    prime[j] = false;
++                }
++            }
++        }
++
++        //Load the prime numbers into an arraylist
++        ArrayList<Integer> prime_no = new ArrayList<>();
++        for (int i = 0; i < prime.length; i++) {
++            if (prime[i]) {
++                prime_no.add(i);
++            }
++        }
++
++        //Count the number having prime factors divisble == 2
++        int prime_count = 0;
++        for (int index = 1; index <= A; index++) {
++            int count = 0;
++            for (int i = 0; i < prime_no.size(); i++) {
++                if ((index % prime_no.get(i)) == 0) {
++                    count++;
++                }
++            }
++            if (count == 2) {
++                prime_count++;
++            }
++        }
++
++        return prime_count;
++
++
++
++
++    }
++}*/
+Index: src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java b/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java
+new file mode 100644
+--- /dev/null	(date 1663775537355)
++++ b/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java	(date 1663775537355)
+@@ -0,0 +1,49 @@
++package AdvancedDSA.Arrays.one.Array;
++
++public class RowWithMaximumNumberOne {
++
++    public static int solve(int[][] A) {
++        int i =0;
++        int n = A.length;
++        int m = A[0].length;
++        int j= A[0].length -1 ;
++        int count =0;
++        int ans = Integer.MIN_VALUE;
++        int minRow = Integer.MAX_VALUE;
++        // check that first coloumn and count the no. of 1 and
++        // based on the current value if found below row 1 then count the answer else go to next row
++        while(i<n && j>=0){
++            if(A[i][j] == 1){
++                count++;
++                if(count > ans){
++                    ans = count;
++                    minRow = i;
++                }
++
++                j--;
++            }
++            else{
++                i++;
++            }
++        }
++        return minRow;
++    }
++
++    public static void main(String[] args) {
++        int[][] arr = {
++                {0, 0, 0, 0, 0, 1, 1, 1, 1},
++        {0, 0, 0, 0, 0, 1, 1, 1, 1},
++        {0, 0, 0, 0, 0, 1, 1, 1, 1},
++        {0, 0, 0, 0, 0, 0, 1, 1, 1},
++        {0, 0, 0, 0, 0, 0, 1, 1, 1},
++        {0, 0, 0, 1, 1, 1, 1, 1, 1},
++        {0, 0, 0, 0, 1, 1, 1, 1, 1},
++        {0, 0, 0, 1, 1, 1, 1, 1, 1},
++        {0, 0, 0, 1, 1, 1, 1, 1, 1},
++        };
++
++        System.out.println(solve(arr));
++    }
++
++
++}
+Index: src/main/java/AdvancedDSA/Arrays/one/Array/FirstMisssingInteger.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/Array/FirstMisssingInteger.java b/src/main/java/AdvancedDSA/Arrays/one/Array/FirstMisssingInteger.java
+new file mode 100644
+--- /dev/null	(date 1663773349467)
++++ b/src/main/java/AdvancedDSA/Arrays/one/Array/FirstMisssingInteger.java	(date 1663773349467)
+@@ -0,0 +1,39 @@
++package AdvancedDSA.Arrays.one.Array;
++
++import java.util.ArrayList;
++import java.util.List;
++
++public class FirstMisssingInteger {
++
++    public  static int firstMissingPositive(ArrayList<Integer> A) {
++        int N = A.size();
++        // changes the useless no. from the array
++        for(int i=0;i<N;i++){
++            if(A.get(i) <=0 || A.get(i)> N){
++                A.set(i, N+2);
++            }
++        }
++        Integer val = 0;
++        for(int i=0;i<N;i++){
++            val =Math.abs(A.get(i));
++            if(val != N+2){
++                A.set(val -1,- Math.abs(A.get(val-1)));
++            }
++        }
++        for(int i=0;i<N;i++){
++            if(A.get(i) >0){
++                return i+1;
++            }
++        }
++        return N+1;
++    }
++    public static void main(String[] args)
++    {
++
++        ArrayList<Integer> a = new ArrayList<>(List.of(3, 4, -1, 1));
++
++
++        System.out.println(firstMissingPositive(a));
++    }
++
++}
+Index: src/main/java/AdvancedDSA/Arrays/one/Array/mergeInterval.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/Array/mergeInterval.java b/src/main/java/AdvancedDSA/Arrays/one/Array/mergeInterval.java
+new file mode 100644
+--- /dev/null	(date 1663735371765)
++++ b/src/main/java/AdvancedDSA/Arrays/one/Array/mergeInterval.java	(date 1663735371765)
+@@ -0,0 +1,145 @@
++package AdvancedDSA.Arrays.one.Array;
++
++import java.util.ArrayList;
++import java.util.List;
++
++/*     this problem has a lot of corner cases that need to be handled correctly.
++
++        Let us first talk about the approach.
++        Given all the intervals, you need to figure out the sequence of intervals that intersect with the given new interval.
++
++        Lets see how we check if interval 1 (a,b) intersects with interval 2 (c,d):
++
++        Overlap case :
++
++        a---------------------b                      OR       a------b
++        c-------------------d                c------------------d
++        Non-overlap case:
++
++        a--------------------b   c------------------d
++        Note that if max(a,c) > min(b,d), then the intervals do not overlap. Otherwise, they overlap.
++
++        Once we figure out the intervals ( interval[i] to the interval[j] ) which overlap with the new interval, note that we can replace all the overlapping intervals with one interval, which would be
++
++        (min(interval[i].start, newInterval.start), max(interval[j].end, newInterval.end)).
++
++        Do make sure you cover the other corner cases.
++
++
++Have you covered the following corner cases :
++
++1) Size of interval array as 0.
++
++2) newInterval being an interval preceding all intervals in the array.
++
++    Given interval (3,6),(8,10), insert and merge (1,2)
++3) newInterval being an interval succeeding all intervals in the array.
++
++    Given interval (1,2), (3,6), insert and merge (8,10)
++4) newInterval not overlapping with any interval and falling in between 2 intervals in the array.
++
++    Given interval (1,2), (8,10) insert and merge (3,6)
++5) newInterval covering all given intervals.
++
++    Given interval (3, 5), (7, 9) insert and merge (1, 10)
++
++
++
++        */
++
++public class mergeInterval {
++    public static class Interval {
++     int start;
++     int end;
++     Interval() { start = 0; end = 0; }
++     Interval(int s, int e) { start = s; end = e; }
++ }
++
++ public static ArrayList<Interval> insert(ArrayList<Interval> intervals, Interval newInterval) {
++     int i = 0;
++     int start = newInterval.start;
++     int end = newInterval.end;
++     int endIndex;
++     int startIndex = endIndex = -1;
++     for (Interval in : intervals) {
++         if (start >= in.start && start <= in.end)
++             startIndex = i;
++         if (end >= in.start && end <= in.end)
++             endIndex = i;
++         i++;
++     }
++     // endpoints of new interval doesn't lie inside any other interval
++     if (startIndex == -1 && endIndex == -1) {
++         startIndex = 0;
++         for (i = 0; i < intervals.size(); i++) {
++             if (start > intervals.get(i).end) {
++                 startIndex = i + 1;
++             }
++         }
++         endIndex = intervals.size() - 1;
++         for (i = intervals.size() - 1; i >= 0 ; i--) {
++             if (end < intervals.get(i).start) {
++                 endIndex = i - 1;
++             }
++         }
++         // Intervals between startIndex and endIndex lies completely inside new interval
++         for (i = startIndex; i <= endIndex; i++) {
++             intervals.remove(startIndex);
++         }
++         intervals.add(startIndex, newInterval);
++         return intervals;
++     }
++     if (startIndex == -1) {
++         for (i = intervals.size() - 1; i >= 0 ; i--) {
++             if (start <= intervals.get(i).start)
++                 startIndex = i;
++         }
++     }
++     if (endIndex == -1) {
++         for (i = 0; i < intervals.size(); i++) {
++             if (end >= intervals.get(i).end)
++                 endIndex = i;
++         }
++     }
++     start = Math.min(intervals.get(startIndex).start, start);
++     end = Math.max(intervals.get(endIndex).end, end);
++     intervals.get(startIndex).start = start;
++     intervals.get(startIndex).end = end;
++     for (i = startIndex + 1; i <= endIndex; i++) {
++         intervals.remove(startIndex + 1);
++     }
++     return intervals;
++
++    /*
++     ArrayList<Interval> result = new ArrayList<Interval>();
++
++     for(Interval interval: intervals){
++         if(interval.end < newInterval.start){
++             result.add(interval);
++         }else if(interval.start > newInterval.end){
++             result.add(newInterval);
++             newInterval = interval;
++         }else if(interval.end >= newInterval.start || interval.start <= newInterval.end){
++             newInterval = new Interval(Math.min(interval.start, newInterval.start), Math.max(newInterval.end, interval.end));
++         }
++     }
++
++     result.add(newInterval);
++
++     return result;
++     */
++ }
++
++
++
++ public static void main(String[] args) {
++       Interval interval = new Interval(1, 3);
++       Interval interva2 = new Interval(6,9);
++       Interval new_interval = new Interval(2, 5);
++       ArrayList<Interval> intervals = new ArrayList<>(List.of(interval,interva2,new_interval));
++
++       ArrayList<Interval> result = insert(intervals,new_interval);
++      }
++}
++
++
+Index: src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java
+new file mode 100644
+--- /dev/null	(date 1663923714312)
++++ b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java	(date 1663923714312)
+@@ -0,0 +1,21 @@
++package AdvancedDSA.Arrays.one.ModularAritmetic;
++
++public class PrimeModuloInverse {
++
++    public static int solve(int A, int B) {
++        int result =1;
++        for( int i=1;i<B;i++){
++            if((A*i)%B ==1){
++                result=i;
++                 break;
++            }
++        }
++       return result;
++    }
++
++    public static void main(String[] args) {
++       int A=4707241;
++       int B=999996259;
++        System.out.println(solve(A,B));
++    }
++}
+Index: src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java
+new file mode 100644
+--- /dev/null	(date 1663917473747)
++++ b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java	(date 1663917473747)
+@@ -0,0 +1,69 @@
++package AdvancedDSA.Arrays.one.ModularAritmetic;
++
++public class PowerForNegPostive {
++
++    public static int pow(int A, int B, int C) {
++        if((A == 0 && B == 0) || A == 0) {  // 0 ^ 0 is indeterminate form hence could be returned as 0
++            return 0;    // Also if 0 ^ n where n = any natural number, we get 0 only. Eg: 0 ^ 2 = 0
++        }
++        if(B == 0) {    // If power is 0, we get 1 for all base values.
++            return 1;
++        }
++        long x = pow(A, B/2, C);    // storing the recursion calls in a variable x which gives us the SC: O(log N_base2)
++
++        // Using modulo to keep the multiplication of two max integers in the worst case also comes in the range [0, C-1]
++        if(B % 2 == 0) {    //If B is even, powers can be broken in equal parts
++            return (int)(((x % C * x % C) + C) % C);
++        } else {
++            return (int)(((x % C * x % C * A % C) + C) % C);
++        }
++    }
++//    public int pow(int x, int n, int d) {
++//        long a = x;
++//        long res = 1L;
++//        while (n > 0) {
++//            if (n % 2 == 1) {
++//                res *= a;
++//                res %= d;
++//            }
++//            a *= a;
++//            a %= d;
++//            n = n >> 1;
++//        }
++//        res = (res + d) % d;
++//        return (int) res;
++//    }}
++
++    // utility power function
++//    static int  power1(int A, int B){
++//        if(A==0 || B==0){
++//            return 1;
++//        }
++//
++//        return A*power1(A,B-1);
++//
++//    }
++//    public static int pow1(int A, int B, int C) {
++//        int value =0;
++//        if(A==0 || B==0){
++//            return 1;
++//        }
++//
++//        else
++//        {
++//            int half = power1(A, B / 2);
++//            if (B % 2 == 0) {
++//                value = (half % C * half % C) % C;
++//            }
++//            else{
++//                value = (((half % C * half % C)*A)+C)%C;
++//            }
++//        }
++//        return value;
++//    }
++
++    public static void main(String[] args) {
++        int A =2, B = 4, C = 3;
++        System.out.println(pow(A,B,C));
++    }
++}
+Index: src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java b/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java
+new file mode 100644
+--- /dev/null	(date 1663908725703)
++++ b/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java	(date 1663908725703)
+@@ -0,0 +1,37 @@
++package AdvancedDSA.Arrays.one.BitManipulation;
++
++import java.util.ArrayList;
++import java.util.List;
++
++public class singleNumberII {
++    public static int singleNumber(final List<Integer> A) {
++        int extraValue = 0;
++
++        for(int i=0; i<32;i++){
++            int noOfSetBitInIthPostition =0;
++            int noOfUnSetBitInIthPostition =0;
++            for(int n=0; n<A.size(); n++){
++                if(((A.get(n) & (1<<i))  !=0)){
++                    noOfSetBitInIthPostition++;
++                }
++                else{
++                    noOfUnSetBitInIthPostition++;
++                }
++            }
++            if(noOfSetBitInIthPostition % 3 !=0 ){
++                extraValue += 1* Math.pow(2,i);
++            }
++            else if(noOfUnSetBitInIthPostition % 3 !=0 ){
++                extraValue += 0* Math.pow(2,i);
++            }
++        }
++        return extraValue;
++
++    }
++
++    public static void main(String[] args) {
++        List<Integer> a= new ArrayList<>(List.of(1, 2, 4, 3, 3, 2, 2, 3, 1, 1));
++        System.out.println(singleNumber(a));
++
++    }
++}
+Index: src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSum.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSum.java b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSum.java
+new file mode 100644
+--- /dev/null	(date 1663905296746)
++++ b/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSum.java	(date 1663905296746)
+@@ -0,0 +1,83 @@
++package AdvancedDSA.Arrays.one.PrimeNo;
++
++import java.util.ArrayList;
++
++public class PrimeSum {
++
++
++        static int MAX = 10000;
++
++        // Array to store all prime less
++        // than and equal to 10^6
++        static ArrayList<Integer> primes = new ArrayList<Integer>();
++
++        // Utility function for Sieve of Sundaram
++        static void sieveSundaram()
++        {
++            // In general Sieve of Sundaram, produces
++            // primes smaller than (2*x + 2) for
++            // a number given number x. Since
++            // we want primes smaller than MAX,
++            // we reduce MAX to half This array is
++            // used to separate numbers of the form
++            // i + j + 2*i*j from others where 1 <= i <= j
++            boolean[] marked = new boolean[MAX / 2 + 100];
++
++            // Main logic of Sundaram. Mark all numbers which
++            // do not generate prime number by doing 2*i+1
++            for (int i = 1; i <= (Math.sqrt(MAX) - 1) / 2; i++)
++                for (int j = (i * (i + 1)) << 1; j <= MAX / 2; j = j + 2 * i + 1)
++                    marked[j] = true;
++
++            // Since 2 is a prime number
++            primes.add(2);
++
++            // Print other primes. Remaining primes are of the
++            // form 2*i + 1 such that marked[i] is false.
++            for (int i = 1; i <= MAX / 2; i++)
++                if (marked[i] == false)
++                    primes.add(2 * i + 1);
++        }
++
++        // Function to perform Goldbach's conjecture
++        static void findPrimes(int n)
++        {
++            // Return if number is not even or less than 3
++            if (n <= 2 || n % 2 != 0)
++            {
++                System.out.println("Invalid Input ");
++                return;
++            }
++
++            // Check only upto half of number
++            for (int i = 0 ; primes.get(i) <= n / 2; i++)
++            {
++                // find difference by subtracting
++                // current prime from n
++                int diff = n - primes.get(i);
++
++                // Search if the difference is
++                // also a prime number
++                if (primes.contains(diff))
++                {
++                    // Express as a sum of primes
++                    System.out.println(primes.get(i) +
++                            " + " + diff + " = " + n);
++                    return;
++                }
++            }
++        }
++
++        // Driver code
++        public static void main (String[] args)
++        {
++            // Finding all prime numbers before limit
++            sieveSundaram();
++
++            // Express number as a sum of two primes
++            findPrimes(4);
++            findPrimes(38);
++            findPrimes(100);
++        }
++    }
++
+Index: src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java
+new file mode 100644
+--- /dev/null	(date 1663843569050)
++++ b/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java	(date 1663843569050)
+@@ -0,0 +1,69 @@
++package AdvancedDSA.Arrays.one.ModularAritmetic;
++
++public class PairSumDivisibleByM {
++    public static int solve(int[] A, int B) {
++        long cnt=0;
++        long mod= (long)(1e9+7);
++        int N=A.length;
++        int rem=0;
++        int [] arr= new int [B];
++        for(int i=0;i<B;i++){
++            arr[i]=0;
++        }
++        for(int j=0;j<N;j++){
++            rem=A[j]%B;
++            arr[rem]++;
++        }
++        cnt+=pairfind(arr[0]);
++        int k=1;
++        int l=B-1;
++        if(B%2==0){
++            cnt+=pairfind(arr[B/2]);
++        }
++        while(k<l){
++            cnt+=(long) arr[k]*arr[l];
++            k++;
++            l--;
++        }
++        return (int) (cnt%mod);
++    }
++    public static long pairfind(long a){
++        long sum= a*(a-1)/2;
++        return sum;
++    }
++
++    /*public static int solve(int[] A, int B) {
++        int i=0;
++        int j=1;
++        int count =0;
++        while(j<A.length){
++            if((A[i] + A[j]) %B == 0){
++                count++;
++
++                if(j==A.length-1){
++                    i++;
++                    j=i+1;
++                }
++                j++;
++            }
++            else if((A[i] + A[j]) %B != 0){
++                if(j<A.length-1)
++                {
++                    j++;
++                }
++//                else if(j==A.length-1){
++//                    i++;
++//                    j=i+1;
++//                }
++            }
++
++        }
++        return count;
++    }*/
++
++    public static void main(String[] args) {
++        int A[] = {1, 2, 3, 4, 5};
++        int B =2;
++        System.out.println(solve(A,B));
++    }
++}
+Index: src/main/java/utility2
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/utility2 b/src/main/java/utility2
+--- a/src/main/java/utility2	(revision daf442daec8cc0cb69936020be51d5a496363eb1)
++++ b/src/main/java/utility2	(date 1663834177545)
+@@ -73,4 +73,32 @@
+                  {5, 3, 8, 1, 2},
+                  {4, 6, 7, 5, 5},
+                  {2, 4, 8, 9, 4}
+-         };
+\ No newline at end of file
++         };
++
++
++
++
++  8.// find the prime no. from the given arraylist and then find total no. of subsequence from
++            // the resultant primeno.
++            boolean primeno[] = new boolean[A.size()];
++            int prime[] = new int[A.size()];
++
++            for(int i =0 ;i<primeno.length ; i++){
++                primeno[i] = true;
++            }
++
++            for(int i=0;i<A.size();i++){
++                for(int p=A[i]*A[i]; p<A.size(); p+=i ){
++                    if(primeno[i] == true){
++                        primeno[i] = false;
++                    }
++                }
++
++            }
++
++            for(int i=0;i<A.size();i++){
++                if(primeno[i] == true){
++                    prime[i] =A.get(i);
++                }
++
++            }
+\ No newline at end of file
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision daf442daec8cc0cb69936020be51d5a496363eb1)
++++ b/.idea/workspace.xml	(date 1664345454041)
+@@ -4,24 +4,26 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="77987ea3-190f-463f-93a5-64ed859b9de2" name="Changes" comment="before the advanced module start">
+-      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SumOfParticularSubmatrix.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/sumOfAllSubMatrixes.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/begger.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_carray_forward/Bulbs.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/ShaggyDistance.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/InorderWithoutRecursion.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/arraylist" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/twoD.java" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/src/main/java/utility2" afterDir="false" />
++    <list default="true" id="77987ea3-190f-463f-93a5-64ed859b9de2" name="Changes" comment="before the bit manipulation start advance">
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/FirstMisssingInteger.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/mergeInterval.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSum.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_carray_forward/LeadersInArray.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/begger.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/begger.java" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/src/main/java/UTILITY" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/UTILITY" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/src/main/java/utility2" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utility2" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -31,6 +33,7 @@
+   <component name="FileTemplateManagerImpl">
+     <option name="RECENT_TEMPLATES">
+       <list>
++        <option value="module-info" />
+         <option value="Class" />
+       </list>
+     </option>
+@@ -87,7 +90,7 @@
+     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+     &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+     &quot;last_opened_file_path&quot;: &quot;H:/JAVA WORKSPACE FOR WORK/gpx/MehulJava&quot;,
+-    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;
++    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.IDE.editor.postfix.templates&quot;
+   }
+ }</component>
+   <component name="RecentsManager">
+@@ -95,13 +98,20 @@
+       <recent name="Programming_constructs.String" />
+     </key>
+   </component>
+-  <component name="RunManager" selected="Application.SearchSortedMatrix">
+-    <configuration name="SearchSortedMatrix" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.TwoDArrays.SearchSortedMatrix" />
++  <component name="RunDashboard">
++    <option name="configurationTypes">
++      <set>
++        <option value="MavenRunConfiguration" />
++      </set>
++    </option>
++  </component>
++  <component name="RunManager" selected="Application.PrimeModuloInverse">
++    <configuration name="PairSumDivisibleByM" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
++      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.ModularAritmetic.PairSumDivisibleByM" />
+       <module name="Scalar" />
+       <extension name="coverage">
+         <pattern>
+-          <option name="PATTERN" value="AdvancedDSA.Arrays.one.TwoDArrays.*" />
++          <option name="PATTERN" value="AdvancedDSA.Arrays.one.ModularAritmetic.*" />
+           <option name="ENABLED" value="true" />
+         </pattern>
+       </extension>
+@@ -109,12 +119,12 @@
+         <option name="Make" enabled="true" />
+       </method>
+     </configuration>
+-    <configuration name="ShaggyDistance" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="Programming_constructs.Hasing1.ShaggyDistance" />
++    <configuration name="PowerForNegPostive" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
++      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.ModularAritmetic.PowerForNegPostive" />
+       <module name="Scalar" />
+       <extension name="coverage">
+         <pattern>
+-          <option name="PATTERN" value="Programming_constructs.Hasing1.*" />
++          <option name="PATTERN" value="AdvancedDSA.Arrays.one.ModularAritmetic.*" />
+           <option name="ENABLED" value="true" />
+         </pattern>
+       </extension>
+@@ -122,12 +132,12 @@
+         <option name="Make" enabled="true" />
+       </method>
+     </configuration>
+-    <configuration name="Sum2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="Programming_constructs.Hasing2.Sum2" />
++    <configuration name="PrimeModuloInverse" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
++      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.ModularAritmetic.PrimeModuloInverse" />
+       <module name="Scalar" />
+       <extension name="coverage">
+         <pattern>
+-          <option name="PATTERN" value="Programming_constructs.Hasing2.*" />
++          <option name="PATTERN" value="AdvancedDSA.Arrays.one.ModularAritmetic.*" />
+           <option name="ENABLED" value="true" />
+         </pattern>
+       </extension>
+@@ -135,12 +145,12 @@
+         <option name="Make" enabled="true" />
+       </method>
+     </configuration>
+-    <configuration name="SumOfParticularSubmatrix" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.TwoDArrays.SumOfParticularSubmatrix" />
++    <configuration name="PrimeSum" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
++      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.PrimeNo.PrimeSum" />
+       <module name="Scalar" />
+       <extension name="coverage">
+         <pattern>
+-          <option name="PATTERN" value="AdvancedDSA.Arrays.one.TwoDArrays.*" />
++          <option name="PATTERN" value="AdvancedDSA.Arrays.one.PrimeNo.*" />
+           <option name="ENABLED" value="true" />
+         </pattern>
+       </extension>
+@@ -148,12 +158,12 @@
+         <option name="Make" enabled="true" />
+       </method>
+     </configuration>
+-    <configuration name="sumOfAllSubMatrixes" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+-      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.TwoDArrays.sumOfAllSubMatrixes" />
++    <configuration name="singleNumberII" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
++      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.BitManipulation.singleNumberII" />
+       <module name="Scalar" />
+       <extension name="coverage">
+         <pattern>
+-          <option name="PATTERN" value="AdvancedDSA.Arrays.one.TwoDArrays.*" />
++          <option name="PATTERN" value="AdvancedDSA.Arrays.one.BitManipulation.*" />
+           <option name="ENABLED" value="true" />
+         </pattern>
+       </extension>
+@@ -163,11 +173,11 @@
+     </configuration>
+     <recent_temporary>
+       <list>
+-        <item itemvalue="Application.SearchSortedMatrix" />
+-        <item itemvalue="Application.SumOfParticularSubmatrix" />
+-        <item itemvalue="Application.Sum2" />
+-        <item itemvalue="Application.ShaggyDistance" />
+-        <item itemvalue="Application.sumOfAllSubMatrixes" />
++        <item itemvalue="Application.PrimeModuloInverse" />
++        <item itemvalue="Application.PowerForNegPostive" />
++        <item itemvalue="Application.singleNumberII" />
++        <item itemvalue="Application.PrimeSum" />
++        <item itemvalue="Application.PairSumDivisibleByM" />
+       </list>
+     </recent_temporary>
+   </component>
+@@ -208,7 +218,14 @@
+       <option name="project" value="LOCAL" />
+       <updated>1661876482207</updated>
+     </task>
+-    <option name="localTasksCounter" value="5" />
++    <task id="LOCAL-00005" summary="before the bit manipulation start advance">
++      <created>1663338949609</created>
++      <option name="number" value="00005" />
++      <option name="presentableId" value="LOCAL-00005" />
++      <option name="project" value="LOCAL" />
++      <updated>1663338949609</updated>
++    </task>
++    <option name="localTasksCounter" value="6" />
+     <servers />
+   </component>
+   <component name="Vcs.Log.Tabs.Properties">
+@@ -227,7 +244,8 @@
+     <MESSAGE value="Till subarray" />
+     <MESSAGE value="till 2D Array" />
+     <MESSAGE value="before the advanced module start" />
+-    <option name="LAST_COMMIT_MESSAGE" value="before the advanced module start" />
++    <MESSAGE value="before the bit manipulation start advance" />
++    <option name="LAST_COMMIT_MESSAGE" value="before the bit manipulation start advance" />
+   </component>
+   <component name="XDebuggerManager">
+     <breakpoint-manager>
+@@ -812,6 +830,96 @@
+           <line>21</line>
+           <option name="timeStamp" value="253" />
+         </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java</url>
++          <line>25</line>
++          <option name="timeStamp" value="258" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java</url>
++          <line>22</line>
++          <option name="timeStamp" value="259" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java</url>
++          <line>36</line>
++          <option name="timeStamp" value="261" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java</url>
++          <line>14</line>
++          <option name="timeStamp" value="263" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java</url>
++          <line>13</line>
++          <option name="timeStamp" value="264" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java</url>
++          <line>10</line>
++          <option name="timeStamp" value="265" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java</url>
++          <line>25</line>
++          <option name="timeStamp" value="267" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java</url>
++          <line>48</line>
++          <option name="timeStamp" value="269" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java</url>
++          <line>20</line>
++          <option name="timeStamp" value="270" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java</url>
++          <line>14</line>
++          <option name="timeStamp" value="271" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java</url>
++          <line>81</line>
++          <option name="timeStamp" value="276" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java</url>
++          <line>48</line>
++          <option name="timeStamp" value="279" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java</url>
++          <line>14</line>
++          <option name="timeStamp" value="280" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java</url>
++          <line>17</line>
++          <option name="timeStamp" value="281" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java</url>
++          <line>21</line>
++          <option name="timeStamp" value="282" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java</url>
++          <line>24</line>
++          <option name="timeStamp" value="283" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java</url>
++          <line>11</line>
++          <option name="timeStamp" value="284" />
++        </line-breakpoint>
++        <line-breakpoint enabled="true" type="java-line">
++          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java</url>
++          <line>8</line>
++          <option name="timeStamp" value="287" />
++        </line-breakpoint>
+         <breakpoint enabled="true" type="java-exception">
+           <properties class="java.lang.StringIndexOutOfBoundsException" package="java.lang" />
+           <option name="timeStamp" value="64" />
+@@ -836,18 +944,28 @@
+         <watch expression="result" />
+         <watch expression="A[i]" />
+         <watch expression="A.right" />
++        <watch expression="xorValueAllElement ^= A[i]" />
+       </configuration>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java" line="8">
+-        <watch expression="A[i]" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java" line="17">
++        <watch expression="(int)(((x % C * x % C * A % C) + C) % C)" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="31">
++        <watch expression="group2" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="19">
++        <watch expression="(1&lt;&lt;i)" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="13">
++        <watch expression="xorValueAllElement" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java" line="4">
+-        <watch expression="count" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="28">
++        <watch expression="group1" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="30">
+-        <watch expression="asciiValue[j]" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="27">
++        <watch expression="A[i]" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="31">
+-        <watch expression="sum" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="19">
++        <watch expression="((xorValueAllElement)&amp; (1&lt;&lt;i) )" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="30">
+         <watch expression="A.charAt(i)" />
+@@ -855,74 +973,38 @@
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="30">
+         <watch expression="(int)A.charAt(i)" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="43">
+-        <watch expression="result" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="30">
++        <watch expression="asciiValue[j]" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="38">
+-        <watch expression="uniqueKey" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="31">
++        <watch expression="sum" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="37">
+-        <watch expression="endWindow" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" line="17">
++        <watch expression="noOfUnSetBitInIthPostition" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="38">
+-        <watch expression="A.get(endWindow)" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" line="14">
++        <watch expression="noOfSetBitInIthPostition" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="46">
+-        <watch expression="startWindow" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" line="21">
++        <watch expression="extraValue" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" line="14">
+-        <watch expression="A.size()-1" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" line="14">
+-        <watch expression="A.get(A.size()-1)" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays2D14/Rotate90DegreeMatrix.java" line="32">
++        <watch expression="A[i][j]" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays2D14/Rotate90DegreeMatrix.java" line="33">
+         <watch expression="A[i][k]" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays2D14/Rotate90DegreeMatrix.java" line="32">
+-        <watch expression="A[i][j]" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="63">
+-        <watch expression="s" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="85">
+-        <watch expression="preOrder" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="63">
+-        <watch expression="s.push(A)" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="23">
+-        <watch expression="mapA" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="42">
+-        <watch expression="mapA.get(A[i])" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="42">
+-        <watch expression=" mapB.get(A[i])" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="41">
+-        <watch expression="A[i]" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="51">
+-        <watch expression=" mapB.get(A[i])" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="41">
+-        <watch expression="mapB" />
+-      </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_subarray3/SumOfAllSubarray.java" line="15">
+         <watch expression="result" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_subarray3/SumOfAllSubarray.java" line="11">
+         <watch expression=" sum" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java" line="6">
+-        <watch expression="A.length" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/RangeQuerySum.java" line="17">
+-        <watch expression="[b.length" />
++        <watch expression="result" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/RangeQuerySum.java" line="17">
+-        <watch expression="result" />
++        <watch expression="[b.length" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java" line="31">
+         <watch expression="a.get(start)" />
+@@ -939,32 +1021,35 @@
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/GoodPair_givenSumFindPairFromArray.java" line="12">
+         <watch expression="B - A[i] " />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="56">
+-        <watch expression="result[i][j]" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="54">
++        <watch expression="j" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="56">
+-        <watch expression="result" />
++        <watch expression="temp[j]" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="51">
+         <watch expression="i" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="56">
+-        <watch expression="temp[j]" />
++        <watch expression="result" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="54">
+-        <watch expression="j" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="56">
++        <watch expression="result[i][j]" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java" line="11">
+-        <watch expression="A[i+1]" />
++        <watch expression="A[i]" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java" line="10">
+         <watch expression="i" />
+       </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java" line="11">
++        <watch expression="A[i+1]" />
++      </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java" line="22">
+         <watch expression="n-1-i " />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java" line="11">
+-        <watch expression="A[i]" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java" line="35">
++        <watch expression="preOrder" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java" line="25">
+         <watch expression="preOrder" />
+@@ -975,42 +1060,123 @@
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java" line="25">
+         <watch expression="(temp.val" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java" line="35">
+-        <watch expression="preOrder" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="39">
+-        <watch expression="stringToCharArray[i]" />
+-      </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="40">
+         <watch expression="k-1" />
+       </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="38">
++        <watch expression="stringToCharArray" />
++      </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="40">
+         <watch expression="temp+1" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="41">
+         <watch expression="temp" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="38">
+-        <watch expression="stringToCharArray" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="39">
++        <watch expression="stringToCharArray[i]" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/ArrayOfEvenOdd.java" line="88">
+         <watch expression="sc.nextInt()" />
+       </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="29">
++        <watch expression="Prefix[i]" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="26">
++        <watch expression="Prefix" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="21">
++        <watch expression="Suffix[] " />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="29">
++        <watch expression="gcd" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="59">
++        <watch expression="left[i]" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
++        <watch expression="A.charAt(i)" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
++        <watch expression="A.charAt(i)/48" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
++        <watch expression="A.charAt(i)" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java" line="4">
++        <watch expression="count" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java" line="8">
++        <watch expression="A[i]" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="38">
++        <watch expression="A.get(endWindow)" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="46">
++        <watch expression="startWindow" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="43">
++        <watch expression="result" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="37">
++        <watch expression="endWindow" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="38">
++        <watch expression="uniqueKey" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" line="14">
++        <watch expression="A.size()-1" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" line="14">
++        <watch expression="A.get(A.size()-1)" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="85">
++        <watch expression="preOrder" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="63">
++        <watch expression="s.push(A)" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="63">
++        <watch expression="s" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" line="39">
++        <watch expression="A[i] + A[j]" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" line="35">
++        <watch expression="i" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" line="36">
++        <watch expression="j" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="51">
++        <watch expression=" mapB.get(A[i])" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="41">
++        <watch expression="A[i]" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="41">
++        <watch expression="mapB" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="23">
++        <watch expression="mapA" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="42">
++        <watch expression=" mapB.get(A[i])" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="42">
++        <watch expression="mapA.get(A[i])" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java" line="6">
++        <watch expression="A.length" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java" line="16">
++        <watch expression="count" />
++      </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java" line="78">
+         <watch expression="arr[size-1]" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java" line="78">
+         <watch expression="arr[j]" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="22">
+-        <watch expression="a - i" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="23">
+-        <watch expression="B.charAt(b - i)" />
+-      </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="23">
+-        <watch expression="b - i" />
+-      </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="12">
+         <watch expression="A.charAt(i)" />
+       </inline-watch>
+@@ -1018,10 +1184,19 @@
+         <watch expression="A.charAt(a - i)" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="22">
++        <watch expression="a - i" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="22">
+         <watch expression="c1" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="23">
++        <watch expression="b - i" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="12">
+         <watch expression="B.charAt(i)" />
++      </inline-watch>
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="23">
++        <watch expression="B.charAt(b - i)" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/StringPlay.java" line="6">
+         <watch expression="A" />
+@@ -1030,31 +1205,31 @@
+         <watch expression="(A&amp;(1&lt;&lt;i)" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/NoOfGoodDays.java" line="25">
+-        <watch expression="(1&lt;&lt;i)" />
++        <watch expression="(A&amp;(1&lt;&lt;i)) == 1" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/NoOfGoodDays.java" line="25">
+-        <watch expression="(A&amp;(1&lt;&lt;i)) == 1" />
++        <watch expression="(1&lt;&lt;i)" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java" line="0">
+-        <watch expression="target - numbers[i]" />
++        <watch expression="minIndex" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java" line="0">
+         <watch expression="target - numbers[i]" />
+       </inline-watch>
+       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java" line="0">
+-        <watch expression="minIndex" />
++        <watch expression="target - numbers[i]" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
+-        <watch expression="A.charAt(i)" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="45">
++        <watch expression="primeNo.get(j) " />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="59">
+-        <watch expression="left[i]" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="27">
++        <watch expression="primeNo" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
+-        <watch expression="A.charAt(i)/48" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="46">
++        <watch expression="count" />
+       </inline-watch>
+-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
+-        <watch expression="A.charAt(i)" />
++      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="45">
++        <watch expression="primeNo.get(i)" />
+       </inline-watch>
+     </watches-manager>
+   </component>
+Index: src/main/java/AdvancedDSA/Arrays/one/begger.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/begger.java b/src/main/java/AdvancedDSA/Arrays/one/begger.java
+--- a/src/main/java/AdvancedDSA/Arrays/one/begger.java	(revision daf442daec8cc0cb69936020be51d5a496363eb1)
++++ b/src/main/java/AdvancedDSA/Arrays/one/begger.java	(date 1663681631955)
+@@ -1,6 +1,6 @@
+ package AdvancedDSA.Arrays.one;
+ 
+-import java.awt.*;
++//import java.awt.*;
+ import java.util.ArrayList;
+ import java.util.Collections;
+ 
+Index: src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java b/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java
+new file mode 100644
+--- /dev/null	(date 1663691556229)
++++ b/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java	(date 1663691556229)
+@@ -0,0 +1,74 @@
++package AdvancedDSA.Arrays.one.GCD;
++
++// Java implementation of the above approach
++class Test
++{
++    // Recursive function to return gcd of a and b
++    static int gcd(int a, int b)
++    {
++        if (b == 0)
++            return a;
++        return gcd(b, a % b);
++    }
++
++    // Function to return the maximized gcd
++    // after removing a single element
++    // from the given array
++    static int MaxGCD(int a[], int n)
++    {
++
++        // Prefix and Suffix arrays
++        int Prefix[] = new int[n + 2];
++        int Suffix[] = new int[n + 2] ;
++
++        // Single state dynamic programming relation
++        // for storing gcd of first i elements
++        // from the left in Prefix[i]
++        Prefix[1] = a[0];
++        for (int i = 2; i <= n; i += 1)
++        {
++            Prefix[i] = gcd(Prefix[i - 1], a[i - 1]);
++            System.out.print(","+ Prefix[i]);
++        }
++
++        // Initializing Suffix array
++        Suffix[n] = a[n - 1];
++        System.out.println("\n");
++        // Single state dynamic programming relation
++        // for storing gcd of all the elements having
++        // greater than or equal to i in Suffix[i]
++        for (int i = n - 1; i >= 1; i -= 1)
++        {
++            Suffix[i] = gcd(Suffix[i + 1], a[i - 1]);
++
++            System.out.print(","+ Suffix[i]);
++        }
++
++        // If first or last element of
++        // the array has to be removed
++        int ans = Math.max(Suffix[2], Prefix[n - 1]);
++
++        // If any other element is replaced
++        for (int i = 2; i < n; i += 1)
++        {
++            ans = Math.max(ans, gcd(Prefix[i - 1], Suffix[i + 1]));
++        }
++
++        // Return the maximized gcd
++        return ans;
++    }
++
++    // Driver code
++    public static void main(String[] args)
++    {
++
++        int a[] = { 14, 17, 28, 70 };
++        int n = a.length;
++
++        System.out.println(MaxGCD(a, n));
++    }
++}
++
++// This code is contributed by AnkitRai01
++
++
+Index: src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java b/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java
+new file mode 100644
+--- /dev/null	(date 1663683189477)
++++ b/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java	(date 1663683189477)
+@@ -0,0 +1,43 @@
++package AdvancedDSA.Arrays.one.GCD;
++
++public class EnumeratingGCD {
++    public static int gcd(int a, int b){
++        if(a==0) return b;
++
++        return gcd(b%a, a);
++    }
++    public static String solve(String A, String B) {
++
++        int a = Integer.parseInt(A,10);
++        int b = Integer.parseInt(B,10);
++
++        int ans = gcd(a,b);
++        return Integer.toString(ans);
++    }
++
++    public static void main(String[] args) {
++        System.out.println(solve("678728391838182039102","678728391838182039103"));
++    }
++
++   /* There is no point in converting P and Q to numbers, as they would not fit into a c++ data type, and if it does so (Python), calculating GCD of numbers from a range of 1 to 10100 would take a very very large amount of time.
++
++            Instead, the question can be broken down into 2 cases.
++
++            Case 1: P == Q
++    When P and Q are the same, it is obvious that the greatest divisor is the number itself.
++
++            Case 2: P ≠ Q
++    When P and Q are not the same, our answer is GCD(P, P+1, P+2, ...., Q)
++    But, we know that GCD(P, P+1) is always 1
++
++    Proof:  We know that if a number D divides both A and B, it will also divide abs(A-B)
++    Now, if B = A+1, let's assume D to be a number that divides both A and B.
++    D should also divide abs(A-B) = abs(A - (A+1)) = 1
++    But the only number to perfectly divide 1 is 1 itself. Hence D has to be 1.
++
++    Therefore, if P ≠ Q, the answer is 1.*/
++
++//    In the question, we are asked to find the GCD of all the numbers from A to B including A and B.
++//    One of the properties of GCD is GCD of any two consecutive numbers is always 1.
++//    So the only case in which the GCD will not be equal to one is when A and B are equal and is same as the input.
++}
+Index: src/main/java/module-info.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
+new file mode 100644
+--- /dev/null	(date 1663681478165)
++++ b/src/main/java/module-info.java	(date 1663681478165)
+@@ -0,0 +1,2 @@
++module Scalar {
++}
+\ No newline at end of file
+Index: src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java b/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java
+new file mode 100644
+--- /dev/null	(date 1663675111617)
++++ b/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java	(date 1663675111617)
+@@ -0,0 +1,54 @@
++package AdvancedDSA.Arrays.one.BitManipulation;
++
++public class findTwoDistinctNo {
++
++
++    public static int[] solve(int [] A){
++
++        int result[] = new int[2];
++        int xorValueAllElement =0;
++
++
++        // xor all the element and find the value
++        for(int i=0;i<A.length;i++){
++            xorValueAllElement ^= A[i];
++
++        }
++/// now take the ith set bit from the xorvalue we get above
++        int ithBitSetAny = Integer.MAX_VALUE;
++        for(int i=0;i<32;i++){
++            if(((xorValueAllElement)& (1<<i) ) !=0){
++                ithBitSetAny= i;
++                break;
++            }
++        }
++// now based on ith bit we will divide the whole no. in two group
++        int group1 =0, group2 = 0;
++        for(int i=0;i<A.length;i++){
++            if((A[i] & (1 <<ithBitSetAny) ) != 0) {
++                group1 ^= A[i];
++            }
++            else
++                group2 ^= A[i];
++        }
++
++        result[0] = Math.min(group1,group2);
++        result[1] = Math.max(group1,group2);
++        return result;
++
++
++    }
++
++
++    public static void main(String[] args) {
++        int a[] = {1, 2, 3, 1, 2, 4};
++
++        int A[] = solve(a);
++        for(int i=0;i<A.length;i++){
++            System.out.println(A[i]);
++        }
++
++
++
++    }
++}
+Index: src/main/java/UTILITY
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/UTILITY b/src/main/java/UTILITY
+--- a/src/main/java/UTILITY	(revision daf442daec8cc0cb69936020be51d5a496363eb1)
++++ b/src/main/java/UTILITY	(date 1663343328354)
+@@ -17,7 +17,11 @@
+ }
+ 
+ 
+-}
++for(int i=0;i<A.length;i++){
++
++        }
++
++
+ 
+ 
+ class GFG {
Index: src/main/java/utility2
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+> 1.\r\n\r\n    for(int i =0;i<a.length;i++){\r\n                if(mp.containsKey(a[i])){\r\n                     mp.put(a[i],mp.get(a[i])+1);\r\n                }\r\n                else{\r\n                    mp.put(a[i], i);\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n2.\r\n  for(int x: A)\r\n        mp.put(x, mp.getOrDefault(x,0)+1);\r\n\r\n3.\r\n   find the hashmap\r\n\r\n   for(int k: A.keySet())\r\n\r\n\r\n\r\n4.\r\n\r\n        for (int i = 1; i < paddingArray.length; i++)\r\n            for (int j = 1; j < paddingArray[0].length; j++)\r\n            {\r\n                paddingArray[i][j] = A[i-1][j-1];\r\n                System.out.println(\"arr[\" + i + \"][\" + j + \"] = \"\r\n                        + paddingArray[i][j]);\r\n    }\r\n\r\n\r\n5.\r\n// padding the array A with 0 in both row and coloumn\r\n        int paddingArray[][] = new int[A.length+1][A[0].length+1];\r\n\r\n        for(int i=0;i<paddingArray.length; i++){\r\n               paddingArray[i][0] = 0;\r\n        }\r\n        for(int j=0;j<paddingArray[0].length; j++){\r\n               paddingArray[0][j] = 0;\r\n        }\r\n\r\n\r\n6.\r\n   // step1. calculate the prfix sum of submatrix\r\n        int prefixSumMatrix [][] = new int [A.length][A[0].length];\r\n        // 1st row prefix sum\r\n        prefixSumMatrix[0][0] = 0;\r\n        for(int i=0;i<A[0].length;i++){\r\n            prefixSumMatrix[0][i] +=A[0][i];\r\n        }\r\n\r\n        // 1st coloumn prefix sum\r\n        for(int j=0;j<A.length;j++){\r\n            prefixSumMatrix[j][0] +=A[j][0];\r\n        }\r\n\r\n        // for rest of the element\r\n        for(int i = 1;i<A.length; i++){\r\n            for(int j =1; j<A[0].length ; j++){\r\n                prefixSumMatrix[i][j] = prefixSumMatrix[i-1][j] + prefixSumMatrix[i][j-1] + A[i][j] - prefixSumMatrix[i-1][j-1];\r\n            }\r\n        }\r\n\r\n7.\r\n int[][] arr = {\r\n                 {1, 2, 3, 4, 6},\r\n                 {5, 3, 8, 1, 2},\r\n                 {4, 6, 7, 5, 5},\r\n                 {2, 4, 8, 9, 4}\r\n         };
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/utility2 b/src/main/java/utility2
--- a/src/main/java/utility2	(revision daf442daec8cc0cb69936020be51d5a496363eb1)
+++ b/src/main/java/utility2	(date 1664345557897)
@@ -73,4 +73,60 @@
                  {5, 3, 8, 1, 2},
                  {4, 6, 7, 5, 5},
                  {2, 4, 8, 9, 4}
-         };
\ No newline at end of file
+         };
+
+
+
+
+  8.// find the prime no. from the given arraylist and then find total no. of subsequence from
+            // the resultant primeno.
+            boolean primeno[] = new boolean[A.size()];
+            int prime[] = new int[A.size()];
+
+            for(int i =0 ;i<primeno.length ; i++){
+                primeno[i] = true;
+            }
+
+            for(int i=0;i<A.size();i++){
+                for(int p=A[i]*A[i]; p<A.size(); p+=i ){
+                    if(primeno[i] == true){
+                        primeno[i] = false;
+                    }
+                }
+
+            }
+
+            for(int i=0;i<A.size();i++){
+                if(primeno[i] == true){
+                    prime[i] =A.get(i);
+                }
+
+            }
+
+
+
+
+  8.// find the prime no. from the given arraylist and then find total no. of subsequence from
+            // the resultant primeno.
+            boolean primeno[] = new boolean[A.size()];
+            int prime[] = new int[A.size()];
+
+            for(int i =0 ;i<primeno.length ; i++){
+                primeno[i] = true;
+            }
+
+            for(int i=0;i<A.size();i++){
+                for(int p=A[i]*A[i]; p<A.size(); p+=i ){
+                    if(primeno[i] == true){
+                        primeno[i] = false;
+                    }
+                }
+
+            }
+
+            for(int i=0;i<A.size();i++){
+                if(primeno[i] == true){
+                    prime[i] =A.get(i);
+                }
+
+            }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"77987ea3-190f-463f-93a5-64ed859b9de2\" name=\"Changes\" comment=\"before the advanced module start\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SumOfParticularSubmatrix.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/sumOfAllSubMatrixes.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/begger.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_carray_forward/Bulbs.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/ShaggyDistance.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/InorderWithoutRecursion.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/arraylist\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/twoD.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/utility2\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/UTILITY\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/UTILITY\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Pull.Settings\">\r\n    <option name=\"OPTIONS\">\r\n      <set>\r\n        <option value=\"REBASE\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Rebase.Settings\">\r\n    <option name=\"NEW_BASE\" value=\"ScalarPractice\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"ScalarPractice\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"jar://C:/Program Files/Java/jdk-11.0.15.1/lib/src.zip!/java.base/java/lang/StrictMath.java\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2AwZYGi9qCMD7bGcVpmPwQvehe0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;H:/JAVA WORKSPACE FOR WORK/gpx/MehulJava&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"Programming_constructs.String\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.SearchSortedMatrix\">\r\n    <configuration name=\"SearchSortedMatrix\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"AdvancedDSA.Arrays.one.TwoDArrays.SearchSortedMatrix\" />\r\n      <module name=\"Scalar\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"AdvancedDSA.Arrays.one.TwoDArrays.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ShaggyDistance\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Programming_constructs.Hasing1.ShaggyDistance\" />\r\n      <module name=\"Scalar\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Programming_constructs.Hasing1.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Sum2\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Programming_constructs.Hasing2.Sum2\" />\r\n      <module name=\"Scalar\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Programming_constructs.Hasing2.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SumOfParticularSubmatrix\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"AdvancedDSA.Arrays.one.TwoDArrays.SumOfParticularSubmatrix\" />\r\n      <module name=\"Scalar\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"AdvancedDSA.Arrays.one.TwoDArrays.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"sumOfAllSubMatrixes\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"AdvancedDSA.Arrays.one.TwoDArrays.sumOfAllSubMatrixes\" />\r\n      <module name=\"Scalar\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"AdvancedDSA.Arrays.one.TwoDArrays.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.SearchSortedMatrix\" />\r\n        <item itemvalue=\"Application.SumOfParticularSubmatrix\" />\r\n        <item itemvalue=\"Application.Sum2\" />\r\n        <item itemvalue=\"Application.ShaggyDistance\" />\r\n        <item itemvalue=\"Application.sumOfAllSubMatrixes\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"77987ea3-190f-463f-93a5-64ed859b9de2\" name=\"Changes\" comment=\"\" />\r\n      <created>1655922658071</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1655922658071</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"week 3 code\">\r\n      <created>1656354530003</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1656354530004</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Till subarray\">\r\n      <created>1657481260800</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1657481260800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"till 2D Array\">\r\n      <created>1658157411772</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658157411773</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"before the advanced module start\">\r\n      <created>1661876482207</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1661876482207</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"week 3 code\" />\r\n    <MESSAGE value=\"Till subarray\" />\r\n    <MESSAGE value=\"till 2D Array\" />\r\n    <MESSAGE value=\"before the advanced module start\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"before the advanced module start\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/IsPrimeNo.java</url>\r\n          <line>7</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/IsPrimeNo.java</url>\r\n          <line>13</line>\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/IsPrimeNo.java</url>\r\n          <line>11</line>\r\n          <option name=\"timeStamp\" value=\"4\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/PerfectNo.java</url>\r\n          <line>30</line>\r\n          <option name=\"timeStamp\" value=\"6\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/PerfectNo.java</url>\r\n          <line>31</line>\r\n          <option name=\"timeStamp\" value=\"7\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/PerfectNo.java</url>\r\n          <line>25</line>\r\n          <option name=\"timeStamp\" value=\"8\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/PerfectNo.java</url>\r\n          <line>18</line>\r\n          <option name=\"timeStamp\" value=\"9\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/PerfectNo.java</url>\r\n          <line>21</line>\r\n          <option name=\"timeStamp\" value=\"10\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Week2/Day4/RootOfPerfectNum.java</url>\r\n          <line>29</line>\r\n          <option name=\"timeStamp\" value=\"15\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/PerfectNo.java</url>\r\n          <line>15</line>\r\n          <option name=\"timeStamp\" value=\"16\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Week2/Day4/ArmstrongNumber.java</url>\r\n          <line>37</line>\r\n          <option name=\"timeStamp\" value=\"19\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Week2/Day4/ArmstrongNumber.java</url>\r\n          <line>29</line>\r\n          <option name=\"timeStamp\" value=\"22\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Week2/Day4/ArmstrongNumber.java</url>\r\n          <line>43</line>\r\n          <option name=\"timeStamp\" value=\"25\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/IsPairOfSumPresent.java</url>\r\n          <line>18</line>\r\n          <option name=\"timeStamp\" value=\"30\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/CountTheNoOfElementGreaterThanItSelf.java</url>\r\n          <line>7</line>\r\n          <option name=\"timeStamp\" value=\"31\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/CountTheNoOfElementGreaterThanItSelf.java</url>\r\n          <line>9</line>\r\n          <option name=\"timeStamp\" value=\"33\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/CountTheNoOfElementGreaterThanItSelf.java</url>\r\n          <line>26</line>\r\n          <option name=\"timeStamp\" value=\"34\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/CountTheNoOfElementGreaterThanItSelf.java</url>\r\n          <line>21</line>\r\n          <option name=\"timeStamp\" value=\"35\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/GoodPair_givenSumFindPairFromArray.java</url>\r\n          <line>24</line>\r\n          <option name=\"timeStamp\" value=\"38\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/GoodPair_givenSumFindPairFromArray.java</url>\r\n          <line>23</line>\r\n          <option name=\"timeStamp\" value=\"39\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/GoodPair_givenSumFindPairFromArray.java</url>\r\n          <line>13</line>\r\n          <option name=\"timeStamp\" value=\"40\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/GoodPair_givenSumFindPairFromArray.java</url>\r\n          <line>11</line>\r\n          <option name=\"timeStamp\" value=\"41\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/GoodPair_givenSumFindPairFromArray.java</url>\r\n          <line>9</line>\r\n          <option name=\"timeStamp\" value=\"42\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java</url>\r\n          <line>107</line>\r\n          <option name=\"timeStamp\" value=\"43\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java</url>\r\n          <line>65</line>\r\n          <option name=\"timeStamp\" value=\"44\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java</url>\r\n          <line>75</line>\r\n          <option name=\"timeStamp\" value=\"45\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java</url>\r\n          <line>78</line>\r\n          <option name=\"timeStamp\" value=\"46\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java</url>\r\n          <line>82</line>\r\n          <option name=\"timeStamp\" value=\"47\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java</url>\r\n          <line>92</line>\r\n          <option name=\"timeStamp\" value=\"48\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java</url>\r\n          <line>95</line>\r\n          <option name=\"timeStamp\" value=\"49\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java</url>\r\n          <line>98</line>\r\n          <option name=\"timeStamp\" value=\"50\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java</url>\r\n          <line>87</line>\r\n          <option name=\"timeStamp\" value=\"51\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/RangeQuerySum.java</url>\r\n          <line>25</line>\r\n          <option name=\"timeStamp\" value=\"54\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/RangeQuerySum.java</url>\r\n          <line>30</line>\r\n          <option name=\"timeStamp\" value=\"57\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_subarray3/SumOfAllSubarray.java</url>\r\n          <line>10</line>\r\n          <option name=\"timeStamp\" value=\"58\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_subarray3/SumOfAllSubarray.java</url>\r\n          <line>11</line>\r\n          <option name=\"timeStamp\" value=\"59\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/ArrayRotatedByKTimes.java</url>\r\n          <line>51</line>\r\n          <option name=\"timeStamp\" value=\"60\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java</url>\r\n          <line>8</line>\r\n          <option name=\"timeStamp\" value=\"62\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java</url>\r\n          <line>20</line>\r\n          <option name=\"timeStamp\" value=\"65\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java</url>\r\n          <line>22</line>\r\n          <option name=\"timeStamp\" value=\"66\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java</url>\r\n          <line>23</line>\r\n          <option name=\"timeStamp\" value=\"67\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java</url>\r\n          <line>24</line>\r\n          <option name=\"timeStamp\" value=\"68\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/NoOfGoodDays.java</url>\r\n          <line>30</line>\r\n          <option name=\"timeStamp\" value=\"69\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/NoOfGoodDays.java</url>\r\n          <line>26</line>\r\n          <option name=\"timeStamp\" value=\"70\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/ArrayOfEvenOdd.java</url>\r\n          <line>91</line>\r\n          <option name=\"timeStamp\" value=\"71\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/ArrayOfEvenOdd.java</url>\r\n          <line>86</line>\r\n          <option name=\"timeStamp\" value=\"73\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java</url>\r\n          <line>106</line>\r\n          <option name=\"timeStamp\" value=\"84\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java</url>\r\n          <line>100</line>\r\n          <option name=\"timeStamp\" value=\"85\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/ArrayOfEvenOdd.java</url>\r\n          <line>78</line>\r\n          <option name=\"timeStamp\" value=\"86\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/ArrayOfEvenOdd.java</url>\r\n          <line>77</line>\r\n          <option name=\"timeStamp\" value=\"87\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java</url>\r\n          <line>62</line>\r\n          <option name=\"timeStamp\" value=\"90\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java</url>\r\n          <line>52</line>\r\n          <option name=\"timeStamp\" value=\"91\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java</url>\r\n          <line>56</line>\r\n          <option name=\"timeStamp\" value=\"95\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java</url>\r\n          <line>64</line>\r\n          <option name=\"timeStamp\" value=\"96\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java</url>\r\n          <line>44</line>\r\n          <option name=\"timeStamp\" value=\"97\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java</url>\r\n          <line>63</line>\r\n          <option name=\"timeStamp\" value=\"104\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays2D14/Rotate90DegreeMatrix.java</url>\r\n          <line>31</line>\r\n          <option name=\"timeStamp\" value=\"113\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays2D14/Rotate90DegreeMatrix.java</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"114\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/ArrayOfEvenOdd.java</url>\r\n          <line>63</line>\r\n          <option name=\"timeStamp\" value=\"118\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/ArrayOfEvenOdd.java</url>\r\n          <line>68</line>\r\n          <option name=\"timeStamp\" value=\"119\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ModString.java</url>\r\n          <line>14</line>\r\n          <option name=\"timeStamp\" value=\"123\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ModString.java</url>\r\n          <line>10</line>\r\n          <option name=\"timeStamp\" value=\"125\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ModString.java</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"127\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ModString.java</url>\r\n          <line>12</line>\r\n          <option name=\"timeStamp\" value=\"130\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"137\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java</url>\r\n          <line>28</line>\r\n          <option name=\"timeStamp\" value=\"138\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java</url>\r\n          <line>21</line>\r\n          <option name=\"timeStamp\" value=\"139\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java</url>\r\n          <line>30</line>\r\n          <option name=\"timeStamp\" value=\"140\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java</url>\r\n          <line>31</line>\r\n          <option name=\"timeStamp\" value=\"141\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java</url>\r\n          <line>32</line>\r\n          <option name=\"timeStamp\" value=\"142\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/LongestSubstring.java</url>\r\n          <line>2</line>\r\n          <option name=\"timeStamp\" value=\"145\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"149\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java</url>\r\n          <line>16</line>\r\n          <option name=\"timeStamp\" value=\"151\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java</url>\r\n          <line>23</line>\r\n          <option name=\"timeStamp\" value=\"152\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java</url>\r\n          <line>27</line>\r\n          <option name=\"timeStamp\" value=\"153\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java</url>\r\n          <line>13</line>\r\n          <option name=\"timeStamp\" value=\"155\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java</url>\r\n          <line>19</line>\r\n          <option name=\"timeStamp\" value=\"158\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java</url>\r\n          <line>11</line>\r\n          <option name=\"timeStamp\" value=\"159\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java</url>\r\n          <line>23</line>\r\n          <option name=\"timeStamp\" value=\"161\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java</url>\r\n          <line>15</line>\r\n          <option name=\"timeStamp\" value=\"162\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java</url>\r\n          <line>22</line>\r\n          <option name=\"timeStamp\" value=\"165\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java</url>\r\n          <line>10</line>\r\n          <option name=\"timeStamp\" value=\"166\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java</url>\r\n          <line>50</line>\r\n          <option name=\"timeStamp\" value=\"168\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java</url>\r\n          <line>51</line>\r\n          <option name=\"timeStamp\" value=\"169\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java</url>\r\n          <line>36</line>\r\n          <option name=\"timeStamp\" value=\"172\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java</url>\r\n          <line>41</line>\r\n          <option name=\"timeStamp\" value=\"174\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/StringPlay.java</url>\r\n          <line>23</line>\r\n          <option name=\"timeStamp\" value=\"177\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"180\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java</url>\r\n          <line>44</line>\r\n          <option name=\"timeStamp\" value=\"181\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java</url>\r\n          <line>45</line>\r\n          <option name=\"timeStamp\" value=\"182\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java</url>\r\n          <line>46</line>\r\n          <option name=\"timeStamp\" value=\"183\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java</url>\r\n          <line>51</line>\r\n          <option name=\"timeStamp\" value=\"184\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java</url>\r\n          <line>52</line>\r\n          <option name=\"timeStamp\" value=\"185\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java</url>\r\n          <line>53</line>\r\n          <option name=\"timeStamp\" value=\"186\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java</url>\r\n          <line>22</line>\r\n          <option name=\"timeStamp\" value=\"189\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java</url>\r\n          <line>33</line>\r\n          <option name=\"timeStamp\" value=\"191\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java</url>\r\n          <line>38</line>\r\n          <option name=\"timeStamp\" value=\"192\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java</url>\r\n          <line>41</line>\r\n          <option name=\"timeStamp\" value=\"193\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java</url>\r\n          <line>46</line>\r\n          <option name=\"timeStamp\" value=\"194\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java</url>\r\n          <line>47</line>\r\n          <option name=\"timeStamp\" value=\"195\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java</url>\r\n          <line>100</line>\r\n          <option name=\"timeStamp\" value=\"197\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java</url>\r\n          <line>57</line>\r\n          <option name=\"timeStamp\" value=\"198\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java</url>\r\n          <line>85</line>\r\n          <option name=\"timeStamp\" value=\"199\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java</url>\r\n          <line>30</line>\r\n          <option name=\"timeStamp\" value=\"208\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java</url>\r\n          <line>29</line>\r\n          <option name=\"timeStamp\" value=\"209\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java</url>\r\n          <line>35</line>\r\n          <option name=\"timeStamp\" value=\"211\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java</url>\r\n          <line>30</line>\r\n          <option name=\"timeStamp\" value=\"212\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java</url>\r\n          <line>24</line>\r\n          <option name=\"timeStamp\" value=\"215\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java</url>\r\n          <line>14</line>\r\n          <option name=\"timeStamp\" value=\"218\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java</url>\r\n          <line>13</line>\r\n          <option name=\"timeStamp\" value=\"219\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java</url>\r\n          <line>27</line>\r\n          <option name=\"timeStamp\" value=\"221\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SumOfParticularSubmatrix.java</url>\r\n          <line>55</line>\r\n          <option name=\"timeStamp\" value=\"248\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java</url>\r\n          <line>24</line>\r\n          <option name=\"timeStamp\" value=\"249\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java</url>\r\n          <line>12</line>\r\n          <option name=\"timeStamp\" value=\"250\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java</url>\r\n          <line>18</line>\r\n          <option name=\"timeStamp\" value=\"252\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java</url>\r\n          <line>21</line>\r\n          <option name=\"timeStamp\" value=\"253\" />\r\n        </line-breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.StringIndexOutOfBoundsException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"64\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"200\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <pin-to-top-manager>\r\n      <pinned-members>\r\n        <PinnedItemInfo parentTag=\"Programming_constructs.Tree.TreeNode\" memberName=\"left\" />\r\n      </pinned-members>\r\n    </pin-to-top-manager>\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"sum\" />\r\n        <watch expression=\"(k-arr[i]\" />\r\n        <watch expression=\"arr[size-1]\" />\r\n        <watch expression=\"A.charAt(i) == '0'\" />\r\n        <watch expression=\"result\" />\r\n        <watch expression=\"A[i]\" />\r\n        <watch expression=\"A.right\" />\r\n      </configuration>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java\" line=\"8\">\r\n        <watch expression=\"A[i]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java\" line=\"4\">\r\n        <watch expression=\"count\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java\" line=\"30\">\r\n        <watch expression=\"asciiValue[j]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java\" line=\"31\">\r\n        <watch expression=\"sum\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java\" line=\"30\">\r\n        <watch expression=\"A.charAt(i)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java\" line=\"30\">\r\n        <watch expression=\"(int)A.charAt(i)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java\" line=\"43\">\r\n        <watch expression=\"result\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java\" line=\"38\">\r\n        <watch expression=\"uniqueKey\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java\" line=\"37\">\r\n        <watch expression=\"endWindow\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java\" line=\"38\">\r\n        <watch expression=\"A.get(endWindow)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java\" line=\"46\">\r\n        <watch expression=\"startWindow\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java\" line=\"14\">\r\n        <watch expression=\"A.size()-1\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java\" line=\"14\">\r\n        <watch expression=\"A.get(A.size()-1)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays2D14/Rotate90DegreeMatrix.java\" line=\"33\">\r\n        <watch expression=\"A[i][k]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays2D14/Rotate90DegreeMatrix.java\" line=\"32\">\r\n        <watch expression=\"A[i][j]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java\" line=\"63\">\r\n        <watch expression=\"s\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java\" line=\"85\">\r\n        <watch expression=\"preOrder\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java\" line=\"63\">\r\n        <watch expression=\"s.push(A)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java\" line=\"23\">\r\n        <watch expression=\"mapA\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java\" line=\"42\">\r\n        <watch expression=\"mapA.get(A[i])\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java\" line=\"42\">\r\n        <watch expression=\" mapB.get(A[i])\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java\" line=\"41\">\r\n        <watch expression=\"A[i]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java\" line=\"51\">\r\n        <watch expression=\" mapB.get(A[i])\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java\" line=\"41\">\r\n        <watch expression=\"mapB\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_subarray3/SumOfAllSubarray.java\" line=\"15\">\r\n        <watch expression=\"result\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_subarray3/SumOfAllSubarray.java\" line=\"11\">\r\n        <watch expression=\" sum\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java\" line=\"6\">\r\n        <watch expression=\"A.length\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/RangeQuerySum.java\" line=\"17\">\r\n        <watch expression=\"[b.length\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/RangeQuerySum.java\" line=\"17\">\r\n        <watch expression=\"result\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java\" line=\"31\">\r\n        <watch expression=\"a.get(start)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java\" line=\"31\">\r\n        <watch expression=\"sum\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java\" line=\"32\">\r\n        <watch expression=\"start\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java\" line=\"36\">\r\n        <watch expression=\"end\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/GoodPair_givenSumFindPairFromArray.java\" line=\"12\">\r\n        <watch expression=\"B - A[i] \" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java\" line=\"56\">\r\n        <watch expression=\"result[i][j]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java\" line=\"56\">\r\n        <watch expression=\"result\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java\" line=\"51\">\r\n        <watch expression=\"i\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java\" line=\"56\">\r\n        <watch expression=\"temp[j]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java\" line=\"54\">\r\n        <watch expression=\"j\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java\" line=\"11\">\r\n        <watch expression=\"A[i+1]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java\" line=\"10\">\r\n        <watch expression=\"i\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java\" line=\"22\">\r\n        <watch expression=\"n-1-i \" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java\" line=\"11\">\r\n        <watch expression=\"A[i]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java\" line=\"25\">\r\n        <watch expression=\"preOrder\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java\" line=\"22\">\r\n        <watch expression=\"s\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java\" line=\"25\">\r\n        <watch expression=\"(temp.val\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java\" line=\"35\">\r\n        <watch expression=\"preOrder\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java\" line=\"39\">\r\n        <watch expression=\"stringToCharArray[i]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java\" line=\"40\">\r\n        <watch expression=\"k-1\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java\" line=\"40\">\r\n        <watch expression=\"temp+1\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java\" line=\"41\">\r\n        <watch expression=\"temp\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java\" line=\"38\">\r\n        <watch expression=\"stringToCharArray\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/ArrayOfEvenOdd.java\" line=\"88\">\r\n        <watch expression=\"sc.nextInt()\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java\" line=\"78\">\r\n        <watch expression=\"arr[size-1]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java\" line=\"78\">\r\n        <watch expression=\"arr[j]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java\" line=\"22\">\r\n        <watch expression=\"a - i\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java\" line=\"23\">\r\n        <watch expression=\"B.charAt(b - i)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java\" line=\"23\">\r\n        <watch expression=\"b - i\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java\" line=\"12\">\r\n        <watch expression=\"A.charAt(i)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java\" line=\"22\">\r\n        <watch expression=\"A.charAt(a - i)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java\" line=\"22\">\r\n        <watch expression=\"c1\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java\" line=\"12\">\r\n        <watch expression=\"B.charAt(i)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/StringPlay.java\" line=\"6\">\r\n        <watch expression=\"A\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/NoOfGoodDays.java\" line=\"25\">\r\n        <watch expression=\"(A&amp;(1&lt;&lt;i)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/NoOfGoodDays.java\" line=\"25\">\r\n        <watch expression=\"(1&lt;&lt;i)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/NoOfGoodDays.java\" line=\"25\">\r\n        <watch expression=\"(A&amp;(1&lt;&lt;i)) == 1\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java\" line=\"0\">\r\n        <watch expression=\"target - numbers[i]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java\" line=\"0\">\r\n        <watch expression=\"target - numbers[i]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java\" line=\"0\">\r\n        <watch expression=\"minIndex\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java\" line=\"55\">\r\n        <watch expression=\"A.charAt(i)\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java\" line=\"59\">\r\n        <watch expression=\"left[i]\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java\" line=\"55\">\r\n        <watch expression=\"A.charAt(i)/48\" />\r\n      </inline-watch>\r\n      <inline-watch fileUrl=\"file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java\" line=\"55\">\r\n        <watch expression=\"A.charAt(i)\" />\r\n      </inline-watch>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Scalar$MultipleTimeArrayRotations.ic\" NAME=\"MultipleTimeArrayRotations Coverage Results\" MODIFIED=\"1659029126572\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>Introduction_to_Arrays.Arrays_subarray3.AssignmentWeek2.Day4.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision daf442daec8cc0cb69936020be51d5a496363eb1)
+++ b/.idea/workspace.xml	(date 1664345557804)
@@ -4,24 +4,26 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="77987ea3-190f-463f-93a5-64ed859b9de2" name="Changes" comment="before the advanced module start">
-      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SumOfParticularSubmatrix.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/sumOfAllSubMatrixes.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/begger.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_carray_forward/Bulbs.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/ShaggyDistance.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/InorderWithoutRecursion.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/arraylist" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/twoD.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/utility2" afterDir="false" />
+    <list default="true" id="77987ea3-190f-463f-93a5-64ed859b9de2" name="Changes" comment="before the bit manipulation start advance">
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/FirstMisssingInteger.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/mergeInterval.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSum.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_carray_forward/LeadersInArray.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/begger.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/begger.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/UTILITY" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/UTILITY" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/utility2" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/utility2" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -31,6 +33,7 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
+        <option value="module-info" />
         <option value="Class" />
       </list>
     </option>
@@ -87,7 +90,7 @@
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
     &quot;last_opened_file_path&quot;: &quot;H:/JAVA WORKSPACE FOR WORK/gpx/MehulJava&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;
+    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.IDE.editor.postfix.templates&quot;
   }
 }</component>
   <component name="RecentsManager">
@@ -95,13 +98,20 @@
       <recent name="Programming_constructs.String" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.SearchSortedMatrix">
-    <configuration name="SearchSortedMatrix" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.TwoDArrays.SearchSortedMatrix" />
+  <component name="RunDashboard">
+    <option name="configurationTypes">
+      <set>
+        <option value="MavenRunConfiguration" />
+      </set>
+    </option>
+  </component>
+  <component name="RunManager" selected="Application.PrimeModuloInverse">
+    <configuration name="PairSumDivisibleByM" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.ModularAritmetic.PairSumDivisibleByM" />
       <module name="Scalar" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="AdvancedDSA.Arrays.one.TwoDArrays.*" />
+          <option name="PATTERN" value="AdvancedDSA.Arrays.one.ModularAritmetic.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -109,12 +119,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="ShaggyDistance" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="Programming_constructs.Hasing1.ShaggyDistance" />
+    <configuration name="PowerForNegPostive" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.ModularAritmetic.PowerForNegPostive" />
       <module name="Scalar" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="Programming_constructs.Hasing1.*" />
+          <option name="PATTERN" value="AdvancedDSA.Arrays.one.ModularAritmetic.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -122,12 +132,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Sum2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="Programming_constructs.Hasing2.Sum2" />
+    <configuration name="PrimeModuloInverse" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.ModularAritmetic.PrimeModuloInverse" />
       <module name="Scalar" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="Programming_constructs.Hasing2.*" />
+          <option name="PATTERN" value="AdvancedDSA.Arrays.one.ModularAritmetic.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -135,12 +145,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="SumOfParticularSubmatrix" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.TwoDArrays.SumOfParticularSubmatrix" />
+    <configuration name="PrimeSum" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.PrimeNo.PrimeSum" />
       <module name="Scalar" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="AdvancedDSA.Arrays.one.TwoDArrays.*" />
+          <option name="PATTERN" value="AdvancedDSA.Arrays.one.PrimeNo.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -148,12 +158,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="sumOfAllSubMatrixes" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.TwoDArrays.sumOfAllSubMatrixes" />
+    <configuration name="singleNumberII" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="AdvancedDSA.Arrays.one.BitManipulation.singleNumberII" />
       <module name="Scalar" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="AdvancedDSA.Arrays.one.TwoDArrays.*" />
+          <option name="PATTERN" value="AdvancedDSA.Arrays.one.BitManipulation.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -163,11 +173,11 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.SearchSortedMatrix" />
-        <item itemvalue="Application.SumOfParticularSubmatrix" />
-        <item itemvalue="Application.Sum2" />
-        <item itemvalue="Application.ShaggyDistance" />
-        <item itemvalue="Application.sumOfAllSubMatrixes" />
+        <item itemvalue="Application.PrimeModuloInverse" />
+        <item itemvalue="Application.PowerForNegPostive" />
+        <item itemvalue="Application.singleNumberII" />
+        <item itemvalue="Application.PrimeSum" />
+        <item itemvalue="Application.PairSumDivisibleByM" />
       </list>
     </recent_temporary>
   </component>
@@ -208,7 +218,14 @@
       <option name="project" value="LOCAL" />
       <updated>1661876482207</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="before the bit manipulation start advance">
+      <created>1663338949609</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1663338949609</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -227,7 +244,8 @@
     <MESSAGE value="Till subarray" />
     <MESSAGE value="till 2D Array" />
     <MESSAGE value="before the advanced module start" />
-    <option name="LAST_COMMIT_MESSAGE" value="before the advanced module start" />
+    <MESSAGE value="before the bit manipulation start advance" />
+    <option name="LAST_COMMIT_MESSAGE" value="before the bit manipulation start advance" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
@@ -811,6 +829,96 @@
           <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java</url>
           <line>21</line>
           <option name="timeStamp" value="253" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java</url>
+          <line>25</line>
+          <option name="timeStamp" value="258" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java</url>
+          <line>22</line>
+          <option name="timeStamp" value="259" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java</url>
+          <line>36</line>
+          <option name="timeStamp" value="261" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java</url>
+          <line>14</line>
+          <option name="timeStamp" value="263" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java</url>
+          <line>13</line>
+          <option name="timeStamp" value="264" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java</url>
+          <line>10</line>
+          <option name="timeStamp" value="265" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java</url>
+          <line>25</line>
+          <option name="timeStamp" value="267" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java</url>
+          <line>48</line>
+          <option name="timeStamp" value="269" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java</url>
+          <line>20</line>
+          <option name="timeStamp" value="270" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java</url>
+          <line>14</line>
+          <option name="timeStamp" value="271" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/PrimeSequence.java</url>
+          <line>81</line>
+          <option name="timeStamp" value="276" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java</url>
+          <line>48</line>
+          <option name="timeStamp" value="279" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java</url>
+          <line>14</line>
+          <option name="timeStamp" value="280" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java</url>
+          <line>17</line>
+          <option name="timeStamp" value="281" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java</url>
+          <line>21</line>
+          <option name="timeStamp" value="282" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java</url>
+          <line>24</line>
+          <option name="timeStamp" value="283" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java</url>
+          <line>11</line>
+          <option name="timeStamp" value="284" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PrimeModuloInverse.java</url>
+          <line>8</line>
+          <option name="timeStamp" value="287" />
         </line-breakpoint>
         <breakpoint enabled="true" type="java-exception">
           <properties class="java.lang.StringIndexOutOfBoundsException" package="java.lang" />
@@ -836,18 +944,28 @@
         <watch expression="result" />
         <watch expression="A[i]" />
         <watch expression="A.right" />
+        <watch expression="xorValueAllElement ^= A[i]" />
       </configuration>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java" line="8">
-        <watch expression="A[i]" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PowerForNegPostive.java" line="17">
+        <watch expression="(int)(((x % C * x % C * A % C) + C) % C)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="31">
+        <watch expression="group2" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="19">
+        <watch expression="(1&lt;&lt;i)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="13">
+        <watch expression="xorValueAllElement" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java" line="4">
-        <watch expression="count" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="28">
+        <watch expression="group1" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="30">
-        <watch expression="asciiValue[j]" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="27">
+        <watch expression="A[i]" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="31">
-        <watch expression="sum" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="19">
+        <watch expression="((xorValueAllElement)&amp; (1&lt;&lt;i) )" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="30">
         <watch expression="A.charAt(i)" />
@@ -855,74 +973,38 @@
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="30">
         <watch expression="(int)A.charAt(i)" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="43">
-        <watch expression="result" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="27">
+        <watch expression="A[i]" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="38">
-        <watch expression="uniqueKey" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="31">
+        <watch expression="sum" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="37">
-        <watch expression="endWindow" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" line="17">
+        <watch expression="noOfUnSetBitInIthPostition" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="38">
-        <watch expression="A.get(endWindow)" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" line="14">
+        <watch expression="noOfSetBitInIthPostition" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="46">
-        <watch expression="startWindow" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" line="21">
+        <watch expression="extraValue" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" line="14">
-        <watch expression="A.size()-1" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" line="14">
-        <watch expression="A.get(A.size()-1)" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays2D14/Rotate90DegreeMatrix.java" line="32">
+        <watch expression="A[i][j]" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays2D14/Rotate90DegreeMatrix.java" line="33">
         <watch expression="A[i][k]" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays2D14/Rotate90DegreeMatrix.java" line="32">
-        <watch expression="A[i][j]" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="63">
-        <watch expression="s" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="85">
-        <watch expression="preOrder" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="63">
-        <watch expression="s.push(A)" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="23">
-        <watch expression="mapA" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="42">
-        <watch expression="mapA.get(A[i])" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="42">
-        <watch expression=" mapB.get(A[i])" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="41">
-        <watch expression="A[i]" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="51">
-        <watch expression=" mapB.get(A[i])" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="41">
-        <watch expression="mapB" />
-      </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_subarray3/SumOfAllSubarray.java" line="15">
         <watch expression="result" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_subarray3/SumOfAllSubarray.java" line="11">
         <watch expression=" sum" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java" line="6">
-        <watch expression="A.length" />
-      </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/RangeQuerySum.java" line="17">
-        <watch expression="[b.length" />
+        <watch expression="result" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/RangeQuerySum.java" line="17">
-        <watch expression="result" />
+        <watch expression="[b.length" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/largestWindowForSumK.java" line="31">
         <watch expression="a.get(start)" />
@@ -939,32 +1021,35 @@
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/GoodPair_givenSumFindPairFromArray.java" line="12">
         <watch expression="B - A[i] " />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="56">
-        <watch expression="result[i][j]" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="54">
+        <watch expression="j" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="56">
-        <watch expression="result" />
+        <watch expression="temp[j]" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="51">
         <watch expression="i" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="56">
-        <watch expression="temp[j]" />
+        <watch expression="result" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="54">
-        <watch expression="j" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Introduction_to_Arrays/Arrays_subarray3/AssignmentWeek2/Day4/MultipleTimeArrayRotations.java" line="56">
+        <watch expression="result[i][j]" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java" line="11">
-        <watch expression="A[i+1]" />
+        <watch expression="A[i]" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java" line="10">
         <watch expression="i" />
       </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java" line="11">
+        <watch expression="A[i+1]" />
+      </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java" line="22">
         <watch expression="n-1-i " />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/NobelInteger.java" line="11">
-        <watch expression="A[i]" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java" line="35">
+        <watch expression="preOrder" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java" line="25">
         <watch expression="preOrder" />
@@ -974,43 +1059,217 @@
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java" line="25">
         <watch expression="(temp.val" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/LinkedList/PreOrderWithOutRecursion.java" line="35">
-        <watch expression="preOrder" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="39">
-        <watch expression="stringToCharArray[i]" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="40">
         <watch expression="k-1" />
       </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="38">
+        <watch expression="stringToCharArray" />
+      </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="40">
         <watch expression="temp+1" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="41">
         <watch expression="temp" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="38">
-        <watch expression="stringToCharArray" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/reverseString.java" line="39">
+        <watch expression="stringToCharArray[i]" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Introduction_to_array/ArrayOfEvenOdd.java" line="88">
         <watch expression="sc.nextInt()" />
       </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="29">
+        <watch expression="Prefix[i]" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="26">
+        <watch expression="Prefix" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="21">
+        <watch expression="Suffix[] " />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="29">
+        <watch expression="gcd" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="27">
+        <watch expression="primeNo" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="45">
+        <watch expression="primeNo.get(j) " />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="46">
+        <watch expression="count" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
+        <watch expression="A.charAt(i)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java" line="28">
+        <watch expression="group1" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java" line="8">
+        <watch expression="A[i]" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" line="14">
+        <watch expression="noOfSetBitInIthPostition" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" line="21">
+        <watch expression="extraValue" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="30">
+        <watch expression="asciiValue[j]" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/singleNumberII.java" line="17">
+        <watch expression="noOfUnSetBitInIthPostition" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/MathsModularArithmetic/ExcelColumnNumber.java" line="31">
+        <watch expression="sum" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" line="14">
+        <watch expression="A.size()-1" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" line="14">
+        <watch expression="A.get(A.size()-1)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="85">
+        <watch expression="preOrder" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="63">
+        <watch expression="s.push(A)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="63">
+        <watch expression="s" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" line="39">
+        <watch expression="A[i] + A[j]" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" line="35">
+        <watch expression="i" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" line="36">
+        <watch expression="j" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="51">
+        <watch expression=" mapB.get(A[i])" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="41">
+        <watch expression="A[i]" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="41">
+        <watch expression="mapB" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="23">
+        <watch expression="mapA" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="42">
+        <watch expression=" mapB.get(A[i])" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="42">
+        <watch expression="mapA.get(A[i])" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java" line="6">
+        <watch expression="A.length" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java" line="16">
+        <watch expression="count" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="29">
+        <watch expression="Prefix[i]" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="26">
+        <watch expression="Prefix" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="21">
+        <watch expression="Suffix[] " />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java" line="29">
+        <watch expression="gcd" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="59">
+        <watch expression="left[i]" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
+        <watch expression="A.charAt(i)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
+        <watch expression="A.charAt(i)/48" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
+        <watch expression="A.charAt(i)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java" line="4">
+        <watch expression="count" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Sorting/ThreeColorSorting.java" line="8">
+        <watch expression="A[i]" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="38">
+        <watch expression="A.get(endWindow)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="46">
+        <watch expression="startWindow" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="43">
+        <watch expression="result" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="37">
+        <watch expression="endWindow" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/UniqueElementINEachSubArrrayOfSizeB.java" line="38">
+        <watch expression="uniqueKey" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" line="14">
+        <watch expression="A.size()-1" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/rainWaterTrap.java" line="14">
+        <watch expression="A.get(A.size()-1)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="85">
+        <watch expression="preOrder" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="63">
+        <watch expression="s.push(A)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Tree/TreeNode.java" line="63">
+        <watch expression="s" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" line="39">
+        <watch expression="A[i] + A[j]" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" line="35">
+        <watch expression="i" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/ModularAritmetic/PairSumDivisibleByM.java" line="36">
+        <watch expression="j" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="51">
+        <watch expression=" mapB.get(A[i])" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="41">
+        <watch expression="A[i]" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="41">
+        <watch expression="mapB" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="23">
+        <watch expression="mapA" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="42">
+        <watch expression=" mapB.get(A[i])" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing1/commonElementofTwoArray.java" line="42">
+        <watch expression="mapA.get(A[i])" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/TwoDArrays/SearchSortedMatrix.java" line="6">
+        <watch expression="A.length" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/Array/RowWithMaximumNumberOne.java" line="16">
+        <watch expression="count" />
+      </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java" line="78">
         <watch expression="arr[size-1]" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Arrays_prefix_sum/EquilibriumIndex.java" line="78">
         <watch expression="arr[j]" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="22">
-        <watch expression="a - i" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="23">
-        <watch expression="B.charAt(b - i)" />
-      </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="23">
-        <watch expression="b - i" />
-      </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="12">
         <watch expression="A.charAt(i)" />
       </inline-watch>
@@ -1018,10 +1277,19 @@
         <watch expression="A.charAt(a - i)" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="22">
+        <watch expression="a - i" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="22">
         <watch expression="c1" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="23">
+        <watch expression="b - i" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="12">
         <watch expression="B.charAt(i)" />
+      </inline-watch>
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/BinaryString.java" line="23">
+        <watch expression="B.charAt(b - i)" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/String/StringPlay.java" line="6">
         <watch expression="A" />
@@ -1030,31 +1298,31 @@
         <watch expression="(A&amp;(1&lt;&lt;i)" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/NoOfGoodDays.java" line="25">
-        <watch expression="(1&lt;&lt;i)" />
+        <watch expression="(A&amp;(1&lt;&lt;i)) == 1" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/NoOfGoodDays.java" line="25">
-        <watch expression="(A&amp;(1&lt;&lt;i)) == 1" />
+        <watch expression="(1&lt;&lt;i)" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java" line="0">
-        <watch expression="target - numbers[i]" />
+        <watch expression="minIndex" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java" line="0">
         <watch expression="target - numbers[i]" />
       </inline-watch>
       <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/Hasing2/Sum2.java" line="0">
-        <watch expression="minIndex" />
+        <watch expression="target - numbers[i]" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
-        <watch expression="A.charAt(i)" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="45">
+        <watch expression="primeNo.get(j) " />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="59">
-        <watch expression="left[i]" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="27">
+        <watch expression="primeNo" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
-        <watch expression="A.charAt(i)/48" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="46">
+        <watch expression="count" />
       </inline-watch>
-      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/Programming_constructs/BitManupulation/LongestConsecutiveOnesWithSwapping.java" line="55">
-        <watch expression="A.charAt(i)" />
+      <inline-watch fileUrl="file://$PROJECT_DIR$/src/main/java/AdvancedDSA/Arrays/one/PrimeNo/LuckyNo.java" line="45">
+        <watch expression="primeNo.get(i)" />
       </inline-watch>
     </watches-manager>
   </component>
Index: src/main/java/AdvancedDSA/Arrays/one/begger.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package AdvancedDSA.Arrays.one;\r\n\r\nimport java.awt.*;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\npublic class begger {\r\n    public static int [] solve(int A,int[][] B){\r\n        int result[] = new int[A];\r\n        //  iterate over all the query and add the value at that correspondig index\r\n        for(int start =0;start <B[0].length;start ++){\r\n            int end = B[start][1];\r\n            int value = B[start][2];\r\n\r\n            int sum_from_left =0;\r\n            result[start] = result[start] + value;\r\n//            result[end] = result[]   - value;\r\n            // now take each query value and add the value to the particular index of the A\r\n            for(int j =end ; j<=A;j++){\r\n//                result[j] = result[j]+ value;\r\n//                result[start] = result[start] + value;\r\n                result[end+1] = result[j]   - value;\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    return result;\r\n\r\n    }\r\n\r\n\r\n\r\n    public static void main(String[] args) {\r\n\r\n        int A = 5;\r\n        ArrayList<Integer> arrayA = new ArrayList<Integer>(Collections.nCopies(A,0));\r\n//        ArrayList<ArrayList<Integer> > x = new ArrayList<ArrayList<Integer> >();\r\n        int[][] B = { { 1, 2 }, { 3, 4 } };\r\n\r\n        solve(A,B);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/begger.java b/src/main/java/AdvancedDSA/Arrays/one/begger.java
--- a/src/main/java/AdvancedDSA/Arrays/one/begger.java	(revision daf442daec8cc0cb69936020be51d5a496363eb1)
+++ b/src/main/java/AdvancedDSA/Arrays/one/begger.java	(date 1663681631955)
@@ -1,6 +1,6 @@
 package AdvancedDSA.Arrays.one;
 
-import java.awt.*;
+//import java.awt.*;
 import java.util.ArrayList;
 import java.util.Collections;
 
Index: src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java b/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java
new file mode 100644
--- /dev/null	(date 1663691556229)
+++ b/src/main/java/AdvancedDSA/Arrays/one/GCD/Deleteone.java	(date 1663691556229)
@@ -0,0 +1,74 @@
+package AdvancedDSA.Arrays.one.GCD;
+
+// Java implementation of the above approach
+class Test
+{
+    // Recursive function to return gcd of a and b
+    static int gcd(int a, int b)
+    {
+        if (b == 0)
+            return a;
+        return gcd(b, a % b);
+    }
+
+    // Function to return the maximized gcd
+    // after removing a single element
+    // from the given array
+    static int MaxGCD(int a[], int n)
+    {
+
+        // Prefix and Suffix arrays
+        int Prefix[] = new int[n + 2];
+        int Suffix[] = new int[n + 2] ;
+
+        // Single state dynamic programming relation
+        // for storing gcd of first i elements
+        // from the left in Prefix[i]
+        Prefix[1] = a[0];
+        for (int i = 2; i <= n; i += 1)
+        {
+            Prefix[i] = gcd(Prefix[i - 1], a[i - 1]);
+            System.out.print(","+ Prefix[i]);
+        }
+
+        // Initializing Suffix array
+        Suffix[n] = a[n - 1];
+        System.out.println("\n");
+        // Single state dynamic programming relation
+        // for storing gcd of all the elements having
+        // greater than or equal to i in Suffix[i]
+        for (int i = n - 1; i >= 1; i -= 1)
+        {
+            Suffix[i] = gcd(Suffix[i + 1], a[i - 1]);
+
+            System.out.print(","+ Suffix[i]);
+        }
+
+        // If first or last element of
+        // the array has to be removed
+        int ans = Math.max(Suffix[2], Prefix[n - 1]);
+
+        // If any other element is replaced
+        for (int i = 2; i < n; i += 1)
+        {
+            ans = Math.max(ans, gcd(Prefix[i - 1], Suffix[i + 1]));
+        }
+
+        // Return the maximized gcd
+        return ans;
+    }
+
+    // Driver code
+    public static void main(String[] args)
+    {
+
+        int a[] = { 14, 17, 28, 70 };
+        int n = a.length;
+
+        System.out.println(MaxGCD(a, n));
+    }
+}
+
+// This code is contributed by AnkitRai01
+
+
Index: src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java b/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java
new file mode 100644
--- /dev/null	(date 1663683189477)
+++ b/src/main/java/AdvancedDSA/Arrays/one/GCD/EnumeratingGCD.java	(date 1663683189477)
@@ -0,0 +1,43 @@
+package AdvancedDSA.Arrays.one.GCD;
+
+public class EnumeratingGCD {
+    public static int gcd(int a, int b){
+        if(a==0) return b;
+
+        return gcd(b%a, a);
+    }
+    public static String solve(String A, String B) {
+
+        int a = Integer.parseInt(A,10);
+        int b = Integer.parseInt(B,10);
+
+        int ans = gcd(a,b);
+        return Integer.toString(ans);
+    }
+
+    public static void main(String[] args) {
+        System.out.println(solve("678728391838182039102","678728391838182039103"));
+    }
+
+   /* There is no point in converting P and Q to numbers, as they would not fit into a c++ data type, and if it does so (Python), calculating GCD of numbers from a range of 1 to 10100 would take a very very large amount of time.
+
+            Instead, the question can be broken down into 2 cases.
+
+            Case 1: P == Q
+    When P and Q are the same, it is obvious that the greatest divisor is the number itself.
+
+            Case 2: P ≠ Q
+    When P and Q are not the same, our answer is GCD(P, P+1, P+2, ...., Q)
+    But, we know that GCD(P, P+1) is always 1
+
+    Proof:  We know that if a number D divides both A and B, it will also divide abs(A-B)
+    Now, if B = A+1, let's assume D to be a number that divides both A and B.
+    D should also divide abs(A-B) = abs(A - (A+1)) = 1
+    But the only number to perfectly divide 1 is 1 itself. Hence D has to be 1.
+
+    Therefore, if P ≠ Q, the answer is 1.*/
+
+//    In the question, we are asked to find the GCD of all the numbers from A to B including A and B.
+//    One of the properties of GCD is GCD of any two consecutive numbers is always 1.
+//    So the only case in which the GCD will not be equal to one is when A and B are equal and is same as the input.
+}
Index: src/main/java/module-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
new file mode 100644
--- /dev/null	(date 1663681478165)
+++ b/src/main/java/module-info.java	(date 1663681478165)
@@ -0,0 +1,2 @@
+module Scalar {
+}
\ No newline at end of file
Index: src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java b/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java
new file mode 100644
--- /dev/null	(date 1663675111617)
+++ b/src/main/java/AdvancedDSA/Arrays/one/BitManipulation/findTwoDistinctNo.java	(date 1663675111617)
@@ -0,0 +1,54 @@
+package AdvancedDSA.Arrays.one.BitManipulation;
+
+public class findTwoDistinctNo {
+
+
+    public static int[] solve(int [] A){
+
+        int result[] = new int[2];
+        int xorValueAllElement =0;
+
+
+        // xor all the element and find the value
+        for(int i=0;i<A.length;i++){
+            xorValueAllElement ^= A[i];
+
+        }
+/// now take the ith set bit from the xorvalue we get above
+        int ithBitSetAny = Integer.MAX_VALUE;
+        for(int i=0;i<32;i++){
+            if(((xorValueAllElement)& (1<<i) ) !=0){
+                ithBitSetAny= i;
+                break;
+            }
+        }
+// now based on ith bit we will divide the whole no. in two group
+        int group1 =0, group2 = 0;
+        for(int i=0;i<A.length;i++){
+            if((A[i] & (1 <<ithBitSetAny) ) != 0) {
+                group1 ^= A[i];
+            }
+            else
+                group2 ^= A[i];
+        }
+
+        result[0] = Math.min(group1,group2);
+        result[1] = Math.max(group1,group2);
+        return result;
+
+
+    }
+
+
+    public static void main(String[] args) {
+        int a[] = {1, 2, 3, 1, 2, 4};
+
+        int A[] = solve(a);
+        for(int i=0;i<A.length;i++){
+            System.out.println(A[i]);
+        }
+
+
+
+    }
+}
Index: src/main/java/UTILITY
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class GFG {\r\n    public static void main(String[] args)\r\n    {\r\n\r\n        int[][] arr = { { 1, 2 }, { 3, 4 } };\r\n\r\n        for (int i = 0; i < 2; i++)\r\n            for (int j = 0; j < 2; j++)\r\n                System.out.println(\"arr[\" + i + \"][\" + j + \"] = \"\r\n                                   + arr[i][j]);\r\n    }\r\n}\r\n\r\n\r\nfor(int i=0;i<A.length;i++){\r\nSystem.out.println(A[i]);\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nclass GFG {\r\n    public static void main(String[] args)\r\n    {\r\n\r\n        int[][] arr = { { 1, 2 }, { 3, 4 } };\r\n\r\n        for (int i = 0; i < 2; i++)\r\n            for (int j = 0; j < 2; j++)\r\n                System.out.println(\"arr[\" + i + \"][\" + j + \"] = \"\r\n                                   + arr[i][j]);\r\n    }\r\n\r\n\r\n  public static void main(String[] args)\r\n    {\r\n\r\n        int[][][] arr = { { { 1, 2 }, { 3, 4 } }, { { 5, 6 }, { 7, 8 } } };\r\n\r\n        System.out.println(\"arr[0][0][0] = \" + arr[0][0][0]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class GFGTestCase {\r\n\tpublic static void main(\r\n\t\tString[] args)\r\n\t{\r\n\t\t// Scanner class to take\r\n\t\t// values from console\r\n\t\tScanner scanner = new Scanner(System.in);\r\n\r\n\t\t// totalTestCases = total\r\n\t\t// number of TestCases\r\n\t\t// eachTestCaseValues =\r\n\t\t// values in each TestCase as\r\n\t\t// an Array values\r\n\t\tint totalTestCases, eachTestCaseValues;\r\n\r\n\t\t// takes total number of\r\n\t\t// TestCases as integer number\r\n\t\ttotalTestCases = scanner.nextInt();\r\n\r\n\t\t// An array is formed as row\r\n\t\t// values for total testCases\r\n\t\tint[][] arrayMain = new int[totalTestCases][];\r\n\r\n\t\t// for loop to take input of\r\n\t\t// values in each TestCase\r\n\t\tfor (int i = 0; i < arrayMain.length; i++) {\r\n\t\t\teachTestCaseValues = scanner.nextInt();\r\n\t\t\tarrayMain[i] = new int[eachTestCaseValues];\r\n\t\t\tfor (int j = 0; j < arrayMain[i].length; j++) {\r\n\t\t\t\tarrayMain[i][j] = scanner.nextInt();\r\n\t\t\t}\r\n\t\t} // All input entry is done.\r\n\r\n\t\t// Start executing output\r\n\t\t// according to condition provided\r\n\t\tfor (int i = 0; i < arrayMain.length; i++) {\r\n\r\n\t\t\t// Initialize total number of\r\n\t\t\t// even & odd numbers to zero\r\n\t\t\tint nEvenNumbers = 0, nOddNumbers = 0;\r\n\r\n\t\t\t// prints TestCase number with\r\n\t\t\t// total number of its arguments\r\n\t\t\tSystem.out.println(\r\n\t\t\t\t\"TestCase \" + i + \" with \"\r\n\t\t\t\t+ arrayMain[i].length + \" values:\");\r\n\t\t\tfor (int j = 0; j < arrayMain[i].length; j++) {\r\n\t\t\t\tSystem.out.print(arrayMain[i][j] + \" \");\r\n\r\n\t\t\t\t// even & odd counter updated as\r\n\t\t\t\t// eligible number is found\r\n\t\t\t\tif (arrayMain[i][j] % 2 == 0) {\r\n\t\t\t\t\tnEvenNumbers++;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnOddNumbers++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\r\n\t\t\t// Prints total numbers of\r\n\t\t\t// even & odd\r\n\t\t\tSystem.out.println(\r\n\t\t\t\t\"Total Even numbers: \" + nEvenNumbers\r\n\t\t\t\t+ \", Total Odd numbers: \" + nOddNumbers);\r\n\t\t}\r\n\t}\r\n}\r\n// This code is contributed by Udayan Kamble.\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/UTILITY b/src/main/java/UTILITY
--- a/src/main/java/UTILITY	(revision daf442daec8cc0cb69936020be51d5a496363eb1)
+++ b/src/main/java/UTILITY	(date 1663343328354)
@@ -17,7 +17,11 @@
 }
 
 
-}
+for(int i=0;i<A.length;i++){
+
+        }
+
+
 
 
 class GFG {
